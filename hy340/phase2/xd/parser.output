Terminals unused in grammar

   COMMENT
   COMMENT2
   OTHER
   LEFT_SBRANCKET
   RIGHT_SBRANCKET
   LEFT_CBRANCKET
   RIGHT_CBRANCKET


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: stmt statements
    3           | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr AND expr
   16     | expr OR expr
   17     | expr PLUS expr
   18     | expr MINUS expr
   19     | expr MULTI expr
   20     | expr DIV expr
   21     | expr MOD expr
   22     | expr EQUAL expr
   23     | expr NEQUAL expr
   24     | expr GREATER expr
   25     | expr LESS expr
   26     | expr GREATER_EQUAL expr
   27     | expr LESS_EQUAL expr
   28     | term

   29 $@1: %empty

   30 assignexpr: lvalue $@1 ASSIGN expr

   31 term: LEFT_PARENTHES expr RIGHT_PARENTHES
   32     | primary
   33     | MINUS expr
   34     | PPLUS lvalue

   35 $@2: %empty

   36 term: lvalue $@2 PPLUS
   37     | MMINUS lvalue

   38 $@3: %empty

   39 term: lvalue $@3 MMINUS
   40     | NOT expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | LEFT_PARENTHES funcdef RIGHT_PARENTHES
   45        | const

   46 const: NUMBER
   47      | REALNUM
   48      | STRING
   49      | TRUE
   50      | FALSE
   51      | NIL

   52 lvalue: ID
   53       | LOCAL ID
   54       | DCOLON ID
   55       | member

   56 member: lvalue DOT ID
   57       | lvalue LEFT_SBRACKET expr RIGHT_SBRACKET
   58       | call DOT ID
   59       | call LEFT_SBRACKET expr RIGHT_SBRACKET

   60 call: call LEFT_PARENTHES elist RIGHT_PARENTHES
   61     | lvalue callsuffix
   62     | LEFT_PARENTHES funcdef RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

   63 callsuffix: normcall
   64           | methodcall

   65 normcall: LEFT_PARENTHES elist RIGHT_PARENTHES

   66 methodcall: DOTS ID LEFT_PARENTHES elist RIGHT_PARENTHES

   67 elist: expr cexprs
   68      | %empty

   69 cexprs: COMMA expr cexprs
   70       | %empty

   71 objectdef: LEFT_SBRACKET elist RIGHT_SBRACKET
   72          | LEFT_SBRACKET indexed RIGHT_SBRACKET

   73 indexed: indexedelem clindexedelem

   74 clindexedelem: COMMA indexedelem clindexedelem
   75              | %empty

   76 indexedelem: LEFT_CBRACKET expr COLON expr RIGHT_CBRACKET

   77 block: LEFT_CBRACKET RIGHT_CBRACKET

   78 $@4: %empty

   79 block: LEFT_CBRACKET $@4 stmt statements RIGHT_CBRACKET

   80 $@5: %empty

   81 $@6: %empty

   82 $@7: %empty

   83 funcdef: FUNCTION $@5 LEFT_PARENTHES $@6 idlist RIGHT_PARENTHES $@7 block

   84 $@8: %empty

   85 $@9: %empty

   86 $@10: %empty

   87 funcdef: FUNCTION ID $@8 LEFT_PARENTHES $@9 idlist RIGHT_PARENTHES $@10 block

   88 $@11: %empty

   89 idlist: ID $@11 cidlist
   90       | %empty

   91 $@12: %empty

   92 cidlist: COMMA ID $@12 cidlist
   93        | %empty

   94 ifstmt: IF LEFT_PARENTHES expr RIGHT_PARENTHES stmt
   95       | IF LEFT_PARENTHES expr RIGHT_PARENTHES stmt ELSE stmt

   96 whilestmt: WHILE LEFT_PARENTHES expr RIGHT_PARENTHES stmt

   97 forstmt: FOR LEFT_PARENTHES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHES stmt

   98 returnstmt: RETURN expr SEMICOLON
   99           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 94 95
ELSE (259) 95
WHILE (260) 96
FOR (261) 97
FUNCTION (262) 83 87
RETURN (263) 98 99
BREAK (264) 9
CONTINUE (265) 10
LOCAL (266) 53
TRUE (267) 49
FALSE (268) 50
NIL (269) 51
NOT (270) 40
AND (271) 15
OR (272) 16
ASSIGN (273) 30
PLUS (274) 17
MINUS (275) 18 33
MULTI (276) 19
DIV (277) 20
MOD (278) 21
EQUAL (279) 22
NEQUAL (280) 23
PPLUS (281) 34 36
MMINUS (282) 37 39
GREATER (283) 24
LESS (284) 25
GREATER_EQUAL (285) 26
LESS_EQUAL (286) 27
NUMBER (287) 46
REALNUM (288) 47
ID (289) 52 53 54 56 58 66 87 89 92
STRING (290) 48
LEFT_CBRACKET (291) 76 77 79
RIGHT_CBRACKET (292) 76 77 79
LEFT_SBRACKET (293) 57 59 71 72
RIGHT_SBRACKET (294) 57 59 71 72
LEFT_PARENTHES (295) 31 44 60 62 65 66 83 87 94 95 96 97
RIGHT_PARENTHES (296) 31 44 60 62 65 66 83 87 94 95 96 97
SEMICOLON (297) 4 9 10 13 97 98 99
COMMA (298) 69 74 92
COLON (299) 76
DCOLON (300) 54
DOT (301) 56 58
DOTS (302) 66
COMMENT (303)
COMMENT2 (304)
OTHER (305)
UMINUS (306)
LEFT_SBRANCKET (307)
RIGHT_SBRANCKET (308)
LEFT_CBRANCKET (309)
RIGHT_CBRANCKET (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3, on right: 1 2 79
stmt (59)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 79 94 95 96 97
expr (60)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 15 16 17 18 19 20 21 22 23 24 25 26 27 30 31 33 40 57 59 67 69
    76 94 95 96 97 98
assignexpr (61)
    on left: 30, on right: 14
$@1 (62)
    on left: 29, on right: 30
term (63)
    on left: 31 32 33 34 36 37 39 40, on right: 28
$@2 (64)
    on left: 35, on right: 36
$@3 (65)
    on left: 38, on right: 39
primary (66)
    on left: 41 42 43 44 45, on right: 32
const (67)
    on left: 46 47 48 49 50 51, on right: 45
lvalue (68)
    on left: 52 53 54 55, on right: 30 34 36 37 39 41 56 57 61
member (69)
    on left: 56 57 58 59, on right: 55
call (70)
    on left: 60 61 62, on right: 42 58 59 60
callsuffix (71)
    on left: 63 64, on right: 61
normcall (72)
    on left: 65, on right: 63
methodcall (73)
    on left: 66, on right: 64
elist (74)
    on left: 67 68, on right: 60 62 65 66 71 97
cexprs (75)
    on left: 69 70, on right: 67 69
objectdef (76)
    on left: 71 72, on right: 43
indexed (77)
    on left: 73, on right: 72
clindexedelem (78)
    on left: 74 75, on right: 73 74
indexedelem (79)
    on left: 76, on right: 73 74
block (80)
    on left: 77 79, on right: 11 83 87
$@4 (81)
    on left: 78, on right: 79
funcdef (82)
    on left: 83 87, on right: 12 44 62
$@5 (83)
    on left: 80, on right: 83
$@6 (84)
    on left: 81, on right: 83
$@7 (85)
    on left: 82, on right: 83
$@8 (86)
    on left: 84, on right: 87
$@9 (87)
    on left: 85, on right: 87
$@10 (88)
    on left: 86, on right: 87
idlist (89)
    on left: 89 90, on right: 83 87
$@11 (90)
    on left: 88, on right: 89
cidlist (91)
    on left: 92 93, on right: 89 92
$@12 (92)
    on left: 91, on right: 92
ifstmt (93)
    on left: 94 95, on right: 5
whilestmt (94)
    on left: 96, on right: 6
forstmt (95)
    on left: 97, on right: 7
returnstmt (96)
    on left: 98 99, on right: 8


State 0

    0 $accept: . program $end

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    $default  reduce using rule 3 (statements)

    program     go to state 25
    statements  go to state 26
    stmt        go to state 27
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 1

   94 ifstmt: IF . LEFT_PARENTHES expr RIGHT_PARENTHES stmt
   95       | IF . LEFT_PARENTHES expr RIGHT_PARENTHES stmt ELSE stmt

    LEFT_PARENTHES  shift, and go to state 43


State 2

   96 whilestmt: WHILE . LEFT_PARENTHES expr RIGHT_PARENTHES stmt

    LEFT_PARENTHES  shift, and go to state 44


State 3

   97 forstmt: FOR . LEFT_PARENTHES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHES stmt

    LEFT_PARENTHES  shift, and go to state 45


State 4

   83 funcdef: FUNCTION . $@5 LEFT_PARENTHES $@6 idlist RIGHT_PARENTHES $@7 block
   87        | FUNCTION . ID $@8 LEFT_PARENTHES $@9 idlist RIGHT_PARENTHES $@10 block

    ID  shift, and go to state 46

    $default  reduce using rule 80 ($@5)

    $@5  go to state 47


State 5

   98 returnstmt: RETURN . expr SEMICOLON
   99           | RETURN . SEMICOLON

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 48
    DCOLON          shift, and go to state 24

    expr        go to state 49
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 6

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 7

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 8

   53 lvalue: LOCAL . ID

    ID  shift, and go to state 52


State 9

   49 const: TRUE .

    $default  reduce using rule 49 (const)


State 10

   50 const: FALSE .

    $default  reduce using rule 50 (const)


State 11

   51 const: NIL .

    $default  reduce using rule 51 (const)


State 12

   40 term: NOT . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 53
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 13

   33 term: MINUS . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 54
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 14

   34 term: PPLUS . lvalue

    LOCAL           shift, and go to state 8
    ID              shift, and go to state 18
    LEFT_PARENTHES  shift, and go to state 55
    DCOLON          shift, and go to state 24

    lvalue  go to state 56
    member  go to state 34
    call    go to state 57


State 15

   37 term: MMINUS . lvalue

    LOCAL           shift, and go to state 8
    ID              shift, and go to state 18
    LEFT_PARENTHES  shift, and go to state 55
    DCOLON          shift, and go to state 24

    lvalue  go to state 58
    member  go to state 34
    call    go to state 57


State 16

   46 const: NUMBER .

    $default  reduce using rule 46 (const)


State 17

   47 const: REALNUM .

    $default  reduce using rule 47 (const)


State 18

   52 lvalue: ID .

    $default  reduce using rule 52 (lvalue)


State 19

   48 const: STRING .

    $default  reduce using rule 48 (const)


State 20

   77 block: LEFT_CBRACKET . RIGHT_CBRACKET
   79      | LEFT_CBRACKET . $@4 stmt statements RIGHT_CBRACKET

    RIGHT_CBRACKET  shift, and go to state 59

    $default  reduce using rule 78 ($@4)

    $@4  go to state 60


State 21

   71 objectdef: LEFT_SBRACKET . elist RIGHT_SBRACKET
   72          | LEFT_SBRACKET . indexed RIGHT_SBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 61
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr         go to state 62
    assignexpr   go to state 29
    term         go to state 30
    primary      go to state 31
    const        go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 63
    objectdef    go to state 36
    indexed      go to state 64
    indexedelem  go to state 65


State 22

   31 term: LEFT_PARENTHES . expr RIGHT_PARENTHES
   44 primary: LEFT_PARENTHES . funcdef RIGHT_PARENTHES
   62 call: LEFT_PARENTHES . funcdef RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

    FUNCTION        shift, and go to state 4
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 66
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 67


State 23

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 24

   54 lvalue: DCOLON . ID

    ID  shift, and go to state 68


State 25

    0 $accept: program . $end

    $end  shift, and go to state 69


State 26

    1 program: statements .

    $default  reduce using rule 1 (program)


State 27

    2 statements: stmt . statements

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    $default  reduce using rule 3 (statements)

    statements  go to state 70
    stmt        go to state 27
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 28

    4 stmt: expr . SEMICOLON
   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    EQUAL          shift, and go to state 78
    NEQUAL         shift, and go to state 79
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83
    SEMICOLON      shift, and go to state 84


State 29

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 30

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 31

   32 term: primary .

    $default  reduce using rule 32 (term)


State 32

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 33

   30 assignexpr: lvalue . $@1 ASSIGN expr
   36 term: lvalue . $@2 PPLUS
   39     | lvalue . $@3 MMINUS
   41 primary: lvalue .
   56 member: lvalue . DOT ID
   57       | lvalue . LEFT_SBRACKET expr RIGHT_SBRACKET
   61 call: lvalue . callsuffix

    LEFT_SBRACKET   shift, and go to state 85
    LEFT_PARENTHES  shift, and go to state 86
    DOT             shift, and go to state 87
    DOTS            shift, and go to state 88

    ASSIGN    reduce using rule 29 ($@1)
    PPLUS     reduce using rule 35 ($@2)
    MMINUS    reduce using rule 38 ($@3)
    $default  reduce using rule 41 (primary)

    $@1         go to state 89
    $@2         go to state 90
    $@3         go to state 91
    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 34

   55 lvalue: member .

    $default  reduce using rule 55 (lvalue)


State 35

   42 primary: call .
   58 member: call . DOT ID
   59       | call . LEFT_SBRACKET expr RIGHT_SBRACKET
   60 call: call . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_SBRACKET   shift, and go to state 95
    LEFT_PARENTHES  shift, and go to state 96
    DOT             shift, and go to state 97

    $default  reduce using rule 42 (primary)


State 36

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 37

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 38

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 39

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 41

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 42

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 43

   94 ifstmt: IF LEFT_PARENTHES . expr RIGHT_PARENTHES stmt
   95       | IF LEFT_PARENTHES . expr RIGHT_PARENTHES stmt ELSE stmt

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 98
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 44

   96 whilestmt: WHILE LEFT_PARENTHES . expr RIGHT_PARENTHES stmt

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 99
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 45

   97 forstmt: FOR LEFT_PARENTHES . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHES stmt

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr        go to state 62
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 100
    objectdef   go to state 36


State 46

   87 funcdef: FUNCTION ID . $@8 LEFT_PARENTHES $@9 idlist RIGHT_PARENTHES $@10 block

    $default  reduce using rule 84 ($@8)

    $@8  go to state 101


State 47

   83 funcdef: FUNCTION $@5 . LEFT_PARENTHES $@6 idlist RIGHT_PARENTHES $@7 block

    LEFT_PARENTHES  shift, and go to state 102


State 48

   99 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 99 (returnstmt)


State 49

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   98 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    EQUAL          shift, and go to state 78
    NEQUAL         shift, and go to state 79
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83
    SEMICOLON      shift, and go to state 103


State 50

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 51

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 52

   53 lvalue: LOCAL ID .

    $default  reduce using rule 53 (lvalue)


State 53

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   40 term: NOT expr .

    $default  reduce using rule 40 (term)


State 54

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   33 term: MINUS expr .

    $default  reduce using rule 33 (term)


State 55

   62 call: LEFT_PARENTHES . funcdef RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

    FUNCTION  shift, and go to state 4

    funcdef  go to state 104


State 56

   34 term: PPLUS lvalue .
   56 member: lvalue . DOT ID
   57       | lvalue . LEFT_SBRACKET expr RIGHT_SBRACKET
   61 call: lvalue . callsuffix

    LEFT_SBRACKET   shift, and go to state 85
    LEFT_PARENTHES  shift, and go to state 86
    DOT             shift, and go to state 87
    DOTS            shift, and go to state 88

    $default  reduce using rule 34 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 57

   58 member: call . DOT ID
   59       | call . LEFT_SBRACKET expr RIGHT_SBRACKET
   60 call: call . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_SBRACKET   shift, and go to state 95
    LEFT_PARENTHES  shift, and go to state 96
    DOT             shift, and go to state 97


State 58

   37 term: MMINUS lvalue .
   56 member: lvalue . DOT ID
   57       | lvalue . LEFT_SBRACKET expr RIGHT_SBRACKET
   61 call: lvalue . callsuffix

    LEFT_SBRACKET   shift, and go to state 85
    LEFT_PARENTHES  shift, and go to state 86
    DOT             shift, and go to state 87
    DOTS            shift, and go to state 88

    $default  reduce using rule 37 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 59

   77 block: LEFT_CBRACKET RIGHT_CBRACKET .

    $default  reduce using rule 77 (block)


State 60

   79 block: LEFT_CBRACKET $@4 . stmt statements RIGHT_CBRACKET

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 105
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 61

   76 indexedelem: LEFT_CBRACKET . expr COLON expr RIGHT_CBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 106
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 62

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   67 elist: expr . cexprs

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    EQUAL          shift, and go to state 78
    NEQUAL         shift, and go to state 79
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83
    COMMA          shift, and go to state 107

    $default  reduce using rule 70 (cexprs)

    cexprs  go to state 108


State 63

   71 objectdef: LEFT_SBRACKET elist . RIGHT_SBRACKET

    RIGHT_SBRACKET  shift, and go to state 109


State 64

   72 objectdef: LEFT_SBRACKET indexed . RIGHT_SBRACKET

    RIGHT_SBRACKET  shift, and go to state 110


State 65

   73 indexed: indexedelem . clindexedelem

    COMMA  shift, and go to state 111

    $default  reduce using rule 75 (clindexedelem)

    clindexedelem  go to state 112


State 66

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   31 term: LEFT_PARENTHES expr . RIGHT_PARENTHES

    AND              shift, and go to state 71
    OR               shift, and go to state 72
    PLUS             shift, and go to state 73
    MINUS            shift, and go to state 74
    MULTI            shift, and go to state 75
    DIV              shift, and go to state 76
    MOD              shift, and go to state 77
    EQUAL            shift, and go to state 78
    NEQUAL           shift, and go to state 79
    GREATER          shift, and go to state 80
    LESS             shift, and go to state 81
    GREATER_EQUAL    shift, and go to state 82
    LESS_EQUAL       shift, and go to state 83
    RIGHT_PARENTHES  shift, and go to state 113


State 67

   44 primary: LEFT_PARENTHES funcdef . RIGHT_PARENTHES
   62 call: LEFT_PARENTHES funcdef . RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 114


State 68

   54 lvalue: DCOLON ID .

    $default  reduce using rule 54 (lvalue)


State 69

    0 $accept: program $end .

    $default  accept


State 70

    2 statements: stmt statements .

    $default  reduce using rule 2 (statements)


State 71

   15 expr: expr AND . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 115
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 72

   16 expr: expr OR . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 116
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 73

   17 expr: expr PLUS . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 117
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 74

   18 expr: expr MINUS . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 118
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 75

   19 expr: expr MULTI . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 119
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 76

   20 expr: expr DIV . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 120
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 77

   21 expr: expr MOD . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 121
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 78

   22 expr: expr EQUAL . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 122
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 79

   23 expr: expr NEQUAL . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 123
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 80

   24 expr: expr GREATER . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 124
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 81

   25 expr: expr LESS . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 125
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 82

   26 expr: expr GREATER_EQUAL . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 126
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 83

   27 expr: expr LESS_EQUAL . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 127
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 84

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 85

   57 member: lvalue LEFT_SBRACKET . expr RIGHT_SBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 128
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 86

   65 normcall: LEFT_PARENTHES . elist RIGHT_PARENTHES

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr        go to state 62
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 129
    objectdef   go to state 36


State 87

   56 member: lvalue DOT . ID

    ID  shift, and go to state 130


State 88

   66 methodcall: DOTS . ID LEFT_PARENTHES elist RIGHT_PARENTHES

    ID  shift, and go to state 131


State 89

   30 assignexpr: lvalue $@1 . ASSIGN expr

    ASSIGN  shift, and go to state 132


State 90

   36 term: lvalue $@2 . PPLUS

    PPLUS  shift, and go to state 133


State 91

   39 term: lvalue $@3 . MMINUS

    MMINUS  shift, and go to state 134


State 92

   61 call: lvalue callsuffix .

    $default  reduce using rule 61 (call)


State 93

   63 callsuffix: normcall .

    $default  reduce using rule 63 (callsuffix)


State 94

   64 callsuffix: methodcall .

    $default  reduce using rule 64 (callsuffix)


State 95

   59 member: call LEFT_SBRACKET . expr RIGHT_SBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 135
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 96

   60 call: call LEFT_PARENTHES . elist RIGHT_PARENTHES

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr        go to state 62
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 136
    objectdef   go to state 36


State 97

   58 member: call DOT . ID

    ID  shift, and go to state 137


State 98

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   94 ifstmt: IF LEFT_PARENTHES expr . RIGHT_PARENTHES stmt
   95       | IF LEFT_PARENTHES expr . RIGHT_PARENTHES stmt ELSE stmt

    AND              shift, and go to state 71
    OR               shift, and go to state 72
    PLUS             shift, and go to state 73
    MINUS            shift, and go to state 74
    MULTI            shift, and go to state 75
    DIV              shift, and go to state 76
    MOD              shift, and go to state 77
    EQUAL            shift, and go to state 78
    NEQUAL           shift, and go to state 79
    GREATER          shift, and go to state 80
    LESS             shift, and go to state 81
    GREATER_EQUAL    shift, and go to state 82
    LESS_EQUAL       shift, and go to state 83
    RIGHT_PARENTHES  shift, and go to state 138


State 99

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   96 whilestmt: WHILE LEFT_PARENTHES expr . RIGHT_PARENTHES stmt

    AND              shift, and go to state 71
    OR               shift, and go to state 72
    PLUS             shift, and go to state 73
    MINUS            shift, and go to state 74
    MULTI            shift, and go to state 75
    DIV              shift, and go to state 76
    MOD              shift, and go to state 77
    EQUAL            shift, and go to state 78
    NEQUAL           shift, and go to state 79
    GREATER          shift, and go to state 80
    LESS             shift, and go to state 81
    GREATER_EQUAL    shift, and go to state 82
    LESS_EQUAL       shift, and go to state 83
    RIGHT_PARENTHES  shift, and go to state 139


State 100

   97 forstmt: FOR LEFT_PARENTHES elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHES stmt

    SEMICOLON  shift, and go to state 140


State 101

   87 funcdef: FUNCTION ID $@8 . LEFT_PARENTHES $@9 idlist RIGHT_PARENTHES $@10 block

    LEFT_PARENTHES  shift, and go to state 141


State 102

   83 funcdef: FUNCTION $@5 LEFT_PARENTHES . $@6 idlist RIGHT_PARENTHES $@7 block

    $default  reduce using rule 81 ($@6)

    $@6  go to state 142


State 103

   98 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 98 (returnstmt)


State 104

   62 call: LEFT_PARENTHES funcdef . RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 143


State 105

   79 block: LEFT_CBRACKET $@4 stmt . statements RIGHT_CBRACKET

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    $default  reduce using rule 3 (statements)

    statements  go to state 144
    stmt        go to state 27
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 106

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   76 indexedelem: LEFT_CBRACKET expr . COLON expr RIGHT_CBRACKET

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    EQUAL          shift, and go to state 78
    NEQUAL         shift, and go to state 79
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83
    COLON          shift, and go to state 145


State 107

   69 cexprs: COMMA . expr cexprs

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 146
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 108

   67 elist: expr cexprs .

    $default  reduce using rule 67 (elist)


State 109

   71 objectdef: LEFT_SBRACKET elist RIGHT_SBRACKET .

    $default  reduce using rule 71 (objectdef)


State 110

   72 objectdef: LEFT_SBRACKET indexed RIGHT_SBRACKET .

    $default  reduce using rule 72 (objectdef)


State 111

   74 clindexedelem: COMMA . indexedelem clindexedelem

    LEFT_CBRACKET  shift, and go to state 61

    indexedelem  go to state 147


State 112

   73 indexed: indexedelem clindexedelem .

    $default  reduce using rule 73 (indexed)


State 113

   31 term: LEFT_PARENTHES expr RIGHT_PARENTHES .

    $default  reduce using rule 31 (term)


State 114

   44 primary: LEFT_PARENTHES funcdef RIGHT_PARENTHES .
   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 148

    $default  reduce using rule 44 (primary)


State 115

   15 expr: expr . AND expr
   15     | expr AND expr .
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    EQUAL          shift, and go to state 78
    NEQUAL         shift, and go to state 79
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83

    $default  reduce using rule 15 (expr)


State 116

   15 expr: expr . AND expr
   16     | expr . OR expr
   16     | expr OR expr .
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    EQUAL          shift, and go to state 78
    NEQUAL         shift, and go to state 79
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83

    $default  reduce using rule 16 (expr)


State 117

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   17     | expr PLUS expr .
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    MULTI  shift, and go to state 75
    DIV    shift, and go to state 76
    MOD    shift, and go to state 77

    $default  reduce using rule 17 (expr)


State 118

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   18     | expr MINUS expr .
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    MULTI  shift, and go to state 75
    DIV    shift, and go to state 76
    MOD    shift, and go to state 77

    $default  reduce using rule 18 (expr)


State 119

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   19     | expr MULTI expr .
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    $default  reduce using rule 19 (expr)


State 120

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   20     | expr DIV expr .
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    $default  reduce using rule 20 (expr)


State 121

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   21     | expr MOD expr .
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    $default  reduce using rule 21 (expr)


State 122

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   22     | expr EQUAL expr .
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83

    EQUAL   error (nonassociative)
    NEQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 123

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   23     | expr NEQUAL expr .
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83

    EQUAL   error (nonassociative)
    NEQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 124

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   24     | expr GREATER expr .
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    MULTI  shift, and go to state 75
    DIV    shift, and go to state 76
    MOD    shift, and go to state 77

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 125

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   25     | expr LESS expr .
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    MULTI  shift, and go to state 75
    DIV    shift, and go to state 76
    MOD    shift, and go to state 77

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 126

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   26     | expr GREATER_EQUAL expr .
   27     | expr . LESS_EQUAL expr

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    MULTI  shift, and go to state 75
    DIV    shift, and go to state 76
    MOD    shift, and go to state 77

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 26 (expr)


State 127

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   27     | expr LESS_EQUAL expr .

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    MULTI  shift, and go to state 75
    DIV    shift, and go to state 76
    MOD    shift, and go to state 77

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 27 (expr)


State 128

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   57 member: lvalue LEFT_SBRACKET expr . RIGHT_SBRACKET

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    PLUS            shift, and go to state 73
    MINUS           shift, and go to state 74
    MULTI           shift, and go to state 75
    DIV             shift, and go to state 76
    MOD             shift, and go to state 77
    EQUAL           shift, and go to state 78
    NEQUAL          shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUAL   shift, and go to state 82
    LESS_EQUAL      shift, and go to state 83
    RIGHT_SBRACKET  shift, and go to state 149


State 129

   65 normcall: LEFT_PARENTHES elist . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 150


State 130

   56 member: lvalue DOT ID .

    $default  reduce using rule 56 (member)


State 131

   66 methodcall: DOTS ID . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 151


State 132

   30 assignexpr: lvalue $@1 ASSIGN . expr

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 152
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 133

   36 term: lvalue $@2 PPLUS .

    $default  reduce using rule 36 (term)


State 134

   39 term: lvalue $@3 MMINUS .

    $default  reduce using rule 39 (term)


State 135

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   59 member: call LEFT_SBRACKET expr . RIGHT_SBRACKET

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    PLUS            shift, and go to state 73
    MINUS           shift, and go to state 74
    MULTI           shift, and go to state 75
    DIV             shift, and go to state 76
    MOD             shift, and go to state 77
    EQUAL           shift, and go to state 78
    NEQUAL          shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUAL   shift, and go to state 82
    LESS_EQUAL      shift, and go to state 83
    RIGHT_SBRACKET  shift, and go to state 153


State 136

   60 call: call LEFT_PARENTHES elist . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 154


State 137

   58 member: call DOT ID .

    $default  reduce using rule 58 (member)


State 138

   94 ifstmt: IF LEFT_PARENTHES expr RIGHT_PARENTHES . stmt
   95       | IF LEFT_PARENTHES expr RIGHT_PARENTHES . stmt ELSE stmt

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 155
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 139

   96 whilestmt: WHILE LEFT_PARENTHES expr RIGHT_PARENTHES . stmt

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 156
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 140

   97 forstmt: FOR LEFT_PARENTHES elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHES stmt

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 157
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 141

   87 funcdef: FUNCTION ID $@8 LEFT_PARENTHES . $@9 idlist RIGHT_PARENTHES $@10 block

    $default  reduce using rule 85 ($@9)

    $@9  go to state 158


State 142

   83 funcdef: FUNCTION $@5 LEFT_PARENTHES $@6 . idlist RIGHT_PARENTHES $@7 block

    ID  shift, and go to state 159

    $default  reduce using rule 90 (idlist)

    idlist  go to state 160


State 143

   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES . LEFT_PARENTHES elist RIGHT_PARENTHES

    LEFT_PARENTHES  shift, and go to state 148


State 144

   79 block: LEFT_CBRACKET $@4 stmt statements . RIGHT_CBRACKET

    RIGHT_CBRACKET  shift, and go to state 161


State 145

   76 indexedelem: LEFT_CBRACKET expr COLON . expr RIGHT_CBRACKET

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    expr        go to state 162
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 146

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   69 cexprs: COMMA expr . cexprs

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    EQUAL          shift, and go to state 78
    NEQUAL         shift, and go to state 79
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83
    COMMA          shift, and go to state 107

    $default  reduce using rule 70 (cexprs)

    cexprs  go to state 163


State 147

   74 clindexedelem: COMMA indexedelem . clindexedelem

    COMMA  shift, and go to state 111

    $default  reduce using rule 75 (clindexedelem)

    clindexedelem  go to state 164


State 148

   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES LEFT_PARENTHES . elist RIGHT_PARENTHES

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr        go to state 62
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 165
    objectdef   go to state 36


State 149

   57 member: lvalue LEFT_SBRACKET expr RIGHT_SBRACKET .

    $default  reduce using rule 57 (member)


State 150

   65 normcall: LEFT_PARENTHES elist RIGHT_PARENTHES .

    $default  reduce using rule 65 (normcall)


State 151

   66 methodcall: DOTS ID LEFT_PARENTHES . elist RIGHT_PARENTHES

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr        go to state 62
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 166
    objectdef   go to state 36


State 152

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   30 assignexpr: lvalue $@1 ASSIGN expr .

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    EQUAL          shift, and go to state 78
    NEQUAL         shift, and go to state 79
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83

    $default  reduce using rule 30 (assignexpr)


State 153

   59 member: call LEFT_SBRACKET expr RIGHT_SBRACKET .

    $default  reduce using rule 59 (member)


State 154

   60 call: call LEFT_PARENTHES elist RIGHT_PARENTHES .

    $default  reduce using rule 60 (call)


State 155

   94 ifstmt: IF LEFT_PARENTHES expr RIGHT_PARENTHES stmt .
   95       | IF LEFT_PARENTHES expr RIGHT_PARENTHES stmt . ELSE stmt

    ELSE  shift, and go to state 167

    $default  reduce using rule 94 (ifstmt)


State 156

   96 whilestmt: WHILE LEFT_PARENTHES expr RIGHT_PARENTHES stmt .

    $default  reduce using rule 96 (whilestmt)


State 157

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   97 forstmt: FOR LEFT_PARENTHES elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHES stmt

    AND            shift, and go to state 71
    OR             shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    MULTI          shift, and go to state 75
    DIV            shift, and go to state 76
    MOD            shift, and go to state 77
    EQUAL          shift, and go to state 78
    NEQUAL         shift, and go to state 79
    GREATER        shift, and go to state 80
    LESS           shift, and go to state 81
    GREATER_EQUAL  shift, and go to state 82
    LESS_EQUAL     shift, and go to state 83
    SEMICOLON      shift, and go to state 168


State 158

   87 funcdef: FUNCTION ID $@8 LEFT_PARENTHES $@9 . idlist RIGHT_PARENTHES $@10 block

    ID  shift, and go to state 159

    $default  reduce using rule 90 (idlist)

    idlist  go to state 169


State 159

   89 idlist: ID . $@11 cidlist

    $default  reduce using rule 88 ($@11)

    $@11  go to state 170


State 160

   83 funcdef: FUNCTION $@5 LEFT_PARENTHES $@6 idlist . RIGHT_PARENTHES $@7 block

    RIGHT_PARENTHES  shift, and go to state 171


State 161

   79 block: LEFT_CBRACKET $@4 stmt statements RIGHT_CBRACKET .

    $default  reduce using rule 79 (block)


State 162

   15 expr: expr . AND expr
   16     | expr . OR expr
   17     | expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTI expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . EQUAL expr
   23     | expr . NEQUAL expr
   24     | expr . GREATER expr
   25     | expr . LESS expr
   26     | expr . GREATER_EQUAL expr
   27     | expr . LESS_EQUAL expr
   76 indexedelem: LEFT_CBRACKET expr COLON expr . RIGHT_CBRACKET

    AND             shift, and go to state 71
    OR              shift, and go to state 72
    PLUS            shift, and go to state 73
    MINUS           shift, and go to state 74
    MULTI           shift, and go to state 75
    DIV             shift, and go to state 76
    MOD             shift, and go to state 77
    EQUAL           shift, and go to state 78
    NEQUAL          shift, and go to state 79
    GREATER         shift, and go to state 80
    LESS            shift, and go to state 81
    GREATER_EQUAL   shift, and go to state 82
    LESS_EQUAL      shift, and go to state 83
    RIGHT_CBRACKET  shift, and go to state 172


State 163

   69 cexprs: COMMA expr cexprs .

    $default  reduce using rule 69 (cexprs)


State 164

   74 clindexedelem: COMMA indexedelem clindexedelem .

    $default  reduce using rule 74 (clindexedelem)


State 165

   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES LEFT_PARENTHES elist . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 173


State 166

   66 methodcall: DOTS ID LEFT_PARENTHES elist . RIGHT_PARENTHES

    RIGHT_PARENTHES  shift, and go to state 174


State 167

   95 ifstmt: IF LEFT_PARENTHES expr RIGHT_PARENTHES stmt ELSE . stmt

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 175
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 168

   97 forstmt: FOR LEFT_PARENTHES elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHES stmt

    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    DCOLON          shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr        go to state 62
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 176
    objectdef   go to state 36


State 169

   87 funcdef: FUNCTION ID $@8 LEFT_PARENTHES $@9 idlist . RIGHT_PARENTHES $@10 block

    RIGHT_PARENTHES  shift, and go to state 177


State 170

   89 idlist: ID $@11 . cidlist

    COMMA  shift, and go to state 178

    $default  reduce using rule 93 (cidlist)

    cidlist  go to state 179


State 171

   83 funcdef: FUNCTION $@5 LEFT_PARENTHES $@6 idlist RIGHT_PARENTHES . $@7 block

    $default  reduce using rule 82 ($@7)

    $@7  go to state 180


State 172

   76 indexedelem: LEFT_CBRACKET expr COLON expr RIGHT_CBRACKET .

    $default  reduce using rule 76 (indexedelem)


State 173

   62 call: LEFT_PARENTHES funcdef RIGHT_PARENTHES LEFT_PARENTHES elist RIGHT_PARENTHES .

    $default  reduce using rule 62 (call)


State 174

   66 methodcall: DOTS ID LEFT_PARENTHES elist RIGHT_PARENTHES .

    $default  reduce using rule 66 (methodcall)


State 175

   95 ifstmt: IF LEFT_PARENTHES expr RIGHT_PARENTHES stmt ELSE stmt .

    $default  reduce using rule 95 (ifstmt)


State 176

   97 forstmt: FOR LEFT_PARENTHES elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHES stmt

    RIGHT_PARENTHES  shift, and go to state 181


State 177

   87 funcdef: FUNCTION ID $@8 LEFT_PARENTHES $@9 idlist RIGHT_PARENTHES . $@10 block

    $default  reduce using rule 86 ($@10)

    $@10  go to state 182


State 178

   92 cidlist: COMMA . ID $@12 cidlist

    ID  shift, and go to state 183


State 179

   89 idlist: ID $@11 cidlist .

    $default  reduce using rule 89 (idlist)


State 180

   83 funcdef: FUNCTION $@5 LEFT_PARENTHES $@6 idlist RIGHT_PARENTHES $@7 . block

    LEFT_CBRACKET  shift, and go to state 20

    block  go to state 184


State 181

   97 forstmt: FOR LEFT_PARENTHES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHES . stmt

    IF              shift, and go to state 1
    WHILE           shift, and go to state 2
    FOR             shift, and go to state 3
    FUNCTION        shift, and go to state 4
    RETURN          shift, and go to state 5
    BREAK           shift, and go to state 6
    CONTINUE        shift, and go to state 7
    LOCAL           shift, and go to state 8
    TRUE            shift, and go to state 9
    FALSE           shift, and go to state 10
    NIL             shift, and go to state 11
    NOT             shift, and go to state 12
    MINUS           shift, and go to state 13
    PPLUS           shift, and go to state 14
    MMINUS          shift, and go to state 15
    NUMBER          shift, and go to state 16
    REALNUM         shift, and go to state 17
    ID              shift, and go to state 18
    STRING          shift, and go to state 19
    LEFT_CBRACKET   shift, and go to state 20
    LEFT_SBRACKET   shift, and go to state 21
    LEFT_PARENTHES  shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    DCOLON          shift, and go to state 24

    stmt        go to state 185
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 182

   87 funcdef: FUNCTION ID $@8 LEFT_PARENTHES $@9 idlist RIGHT_PARENTHES $@10 . block

    LEFT_CBRACKET  shift, and go to state 20

    block  go to state 186


State 183

   92 cidlist: COMMA ID . $@12 cidlist

    $default  reduce using rule 91 ($@12)

    $@12  go to state 187


State 184

   83 funcdef: FUNCTION $@5 LEFT_PARENTHES $@6 idlist RIGHT_PARENTHES $@7 block .

    $default  reduce using rule 83 (funcdef)


State 185

   97 forstmt: FOR LEFT_PARENTHES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHES stmt .

    $default  reduce using rule 97 (forstmt)


State 186

   87 funcdef: FUNCTION ID $@8 LEFT_PARENTHES $@9 idlist RIGHT_PARENTHES $@10 block .

    $default  reduce using rule 87 (funcdef)


State 187

   92 cidlist: COMMA ID $@12 . cidlist

    COMMA  shift, and go to state 178

    $default  reduce using rule 93 (cidlist)

    cidlist  go to state 188


State 188

   92 cidlist: COMMA ID $@12 cidlist .

    $default  reduce using rule 92 (cidlist)
