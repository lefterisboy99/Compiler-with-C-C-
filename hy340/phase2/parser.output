Terminals unused in grammar

   BLOCK_COMMENT
   LINE_COMMENT
   ESCAPE_CHARACTERS
   SPACE
   EOF
   UNDEFINED


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr MULTIPLY expr
   17     | expr DIV expr
   18     | expr MOD expr
   19     | expr BIGGER expr
   20     | expr BIGGER_EQ expr
   21     | expr LESS expr
   22     | expr LESS_EQ expr
   23     | expr EQUAL expr
   24     | expr DIFFER expr
   25     | expr AND expr
   26     | expr OR expr
   27     | term

   28 term: START_PARENTHESIS expr END_PARENTHESIS
   29     | primary
   30     | MINUS expr
   31     | PLUSPLUS lvalue
   32     | lvalue PLUSPLUS
   33     | MINUSMINUS lvalue
   34     | lvalue MINUSMINUS
   35     | NOT expr

   36 primary: lvalue
   37        | call
   38        | objectdef
   39        | START_PARENTHESIS funcdef END_PARENTHESIS
   40        | const

   41 lvalue: ID
   42       | LOCAL ID
   43       | DOUBLE_COLON ID
   44       | member

   45 assignexpr: lvalue EQUALEQUAL expr

   46 member: lvalue DOT ID
   47       | lvalue START_BRACKET expr END_BRACKET
   48       | call DOT ID
   49       | call START_BRACKET expr END_BRACKET

   50 call: call START_PARENTHESIS elist END_PARENTHESIS
   51     | lvalue callsuffix
   52     | START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

   53 callsuffix: normcall
   54           | methodcall

   55 normcall: START_PARENTHESIS elist END_PARENTHESIS

   56 methodcall: DOUBLE_DOT ID START_PARENTHESIS elist END_PARENTHESIS

   57 elist: expr commaexpr
   58      | %empty

   59 commaexpr: COMMA expr commaexpr
   60          | %empty

   61 objectdef: START_BRACKET elist END_BRACKET
   62          | START_BRACKET indexed END_BRACKET

   63 indexed: indexedelem commaindexedelem

   64 commaindexedelem: COMMA indexedelem commaindexedelem
   65                 | %empty

   66 indexedelem: CURLY_START_BRACKET expr COLON expr CURLY_END_BRACKET

   67 block: CURLY_START_BRACKET CURLY_END_BRACKET
   68      | CURLY_START_BRACKET stmt program CURLY_END_BRACKET

   69 funcdef: FUNCTION START_PARENTHESIS idlist END_PARENTHESIS block
   70        | FUNCTION ID START_PARENTHESIS idlist END_PARENTHESIS block

   71 const: REAL
   72      | INTEGER
   73      | STRING
   74      | NIL
   75      | TRUE
   76      | FALSE

   77 idlist: ID commaid
   78       | %empty

   79 commaid: COMMA ID commaid
   80        | %empty

   81 ifstmt: IF START_PARENTHESIS expr END_PARENTHESIS stmt
   82       | IF START_PARENTHESIS expr END_PARENTHESIS stmt ELSE stmt

   83 whilestmt: WHILE START_PARENTHESIS expr END_PARENTHESIS stmt

   84 forstmt: FOR START_PARENTHESIS elist SEMICOLON expr SEMICOLON elist END_PARENTHESIS stmt

   85 returnstmt: RETURN expr SEMICOLON
   86           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING (258) 73
INTEGER (259) 72
REAL (260) 71
LOCAL (261) 42
NIL (262) 74
ID (263) 41 42 43 46 48 56 70 77 79
BLOCK_COMMENT (264)
LINE_COMMENT (265)
ESCAPE_CHARACTERS (266)
SPACE (267)
IF (268) 81 82
ELSE (269) 82
WHILE (270) 83
FOR (271) 84
FUNCTION (272) 69 70
RETURN (273) 85 86
BREAK (274) 8
CONTINUE (275) 9
AND (276) 25
NOT (277) 35
OR (278) 26
TRUE (279) 75
FALSE (280) 76
EQUAL (281) 23
MINUS (282) 15 30
EQUALEQUAL (283) 45
DIFFER (284) 24
BIGGER (285) 19
LESS (286) 21
BIGGER_EQ (287) 20
LESS_EQ (288) 22
MINUSMINUS (289) 33 34
PLUSPLUS (290) 31 32
MOD (291) 18
MULTIPLY (292) 16
DIV (293) 17
PLUS (294) 14
CURLY_START_BRACKET (295) 66 67 68
CURLY_END_BRACKET (296) 66 67 68
START_BRACKET (297) 47 49 61 62
END_BRACKET (298) 47 49 61 62
START_PARENTHESIS (299) 28 39 50 52 55 56 69 70 81 82 83 84
END_PARENTHESIS (300) 28 39 50 52 55 56 69 70 81 82 83 84
SEMICOLON (301) 3 8 9 12 84 85 86
COMMA (302) 59 64 79
COLON (303) 66
DOUBLE_COLON (304) 43
DOT (305) 46 48
DOUBLE_DOT (306) 56
EOF (307)
UNDEFINED (308)
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0 1 68
stmt (57)
    on left: 3 4 5 6 7 8 9 10 11 12, on right: 1 68 81 82 83 84
expr (58)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27, on right:
    3 14 15 16 17 18 19 20 21 22 23 24 25 26 28 30 35 45 47 49 57 59
    66 81 82 83 84 85
term (59)
    on left: 28 29 30 31 32 33 34 35, on right: 27
primary (60)
    on left: 36 37 38 39 40, on right: 29
lvalue (61)
    on left: 41 42 43 44, on right: 31 32 33 34 36 45 46 47 51
assignexpr (62)
    on left: 45, on right: 13
member (63)
    on left: 46 47 48 49, on right: 44
call (64)
    on left: 50 51 52, on right: 37 48 49 50
callsuffix (65)
    on left: 53 54, on right: 51
normcall (66)
    on left: 55, on right: 53
methodcall (67)
    on left: 56, on right: 54
elist (68)
    on left: 57 58, on right: 50 52 55 56 61 84
commaexpr (69)
    on left: 59 60, on right: 57 59
objectdef (70)
    on left: 61 62, on right: 38
indexed (71)
    on left: 63, on right: 62
commaindexedelem (72)
    on left: 64 65, on right: 63 64
indexedelem (73)
    on left: 66, on right: 63 64
block (74)
    on left: 67 68, on right: 10 69 70
funcdef (75)
    on left: 69 70, on right: 11 39 52
const (76)
    on left: 71 72 73 74 75 76, on right: 40
idlist (77)
    on left: 77 78, on right: 69 70
commaid (78)
    on left: 79 80, on right: 77 79
ifstmt (79)
    on left: 81 82, on right: 4
whilestmt (80)
    on left: 83, on right: 5
forstmt (81)
    on left: 84, on right: 6
returnstmt (82)
    on left: 85 86, on right: 7


State 0

    0 $accept: . program $end

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 1

   73 const: STRING .

    $default  reduce using rule 73 (const)


State 2

   72 const: INTEGER .

    $default  reduce using rule 72 (const)


State 3

   71 const: REAL .

    $default  reduce using rule 71 (const)


State 4

   42 lvalue: LOCAL . ID

    ID  shift, and go to state 42


State 5

   74 const: NIL .

    $default  reduce using rule 74 (const)


State 6

   41 lvalue: ID .

    $default  reduce using rule 41 (lvalue)


State 7

   81 ifstmt: IF . START_PARENTHESIS expr END_PARENTHESIS stmt
   82       | IF . START_PARENTHESIS expr END_PARENTHESIS stmt ELSE stmt

    START_PARENTHESIS  shift, and go to state 43


State 8

   83 whilestmt: WHILE . START_PARENTHESIS expr END_PARENTHESIS stmt

    START_PARENTHESIS  shift, and go to state 44


State 9

   84 forstmt: FOR . START_PARENTHESIS elist SEMICOLON expr SEMICOLON elist END_PARENTHESIS stmt

    START_PARENTHESIS  shift, and go to state 45


State 10

   69 funcdef: FUNCTION . START_PARENTHESIS idlist END_PARENTHESIS block
   70        | FUNCTION . ID START_PARENTHESIS idlist END_PARENTHESIS block

    ID                 shift, and go to state 46
    START_PARENTHESIS  shift, and go to state 47


State 11

   85 returnstmt: RETURN . expr SEMICOLON
   86           | RETURN . SEMICOLON

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    SEMICOLON          shift, and go to state 48
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 49
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 12

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 13

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 14

   35 term: NOT . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 15

   75 const: TRUE .

    $default  reduce using rule 75 (const)


State 16

   76 const: FALSE .

    $default  reduce using rule 76 (const)


State 17

   30 term: MINUS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 53
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 18

   33 term: MINUSMINUS . lvalue

    LOCAL              shift, and go to state 4
    ID                 shift, and go to state 6
    START_PARENTHESIS  shift, and go to state 54
    DOUBLE_COLON       shift, and go to state 24

    lvalue  go to state 55
    member  go to state 32
    call    go to state 56


State 19

   31 term: PLUSPLUS . lvalue

    LOCAL              shift, and go to state 4
    ID                 shift, and go to state 6
    START_PARENTHESIS  shift, and go to state 54
    DOUBLE_COLON       shift, and go to state 24

    lvalue  go to state 57
    member  go to state 32
    call    go to state 56


State 20

   67 block: CURLY_START_BRACKET . CURLY_END_BRACKET
   68      | CURLY_START_BRACKET . stmt program CURLY_END_BRACKET

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    CURLY_END_BRACKET    shift, and go to state 58
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 59
    expr        go to state 27
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 21

   61 objectdef: START_BRACKET . elist END_BRACKET
   62          | START_BRACKET . indexed END_BRACKET

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 60
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 58 (elist)

    expr         go to state 61
    term         go to state 28
    primary      go to state 29
    lvalue       go to state 30
    assignexpr   go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 62
    objectdef    go to state 34
    indexed      go to state 63
    indexedelem  go to state 64
    const        go to state 37


State 22

   28 term: START_PARENTHESIS . expr END_PARENTHESIS
   39 primary: START_PARENTHESIS . funcdef END_PARENTHESIS
   52 call: START_PARENTHESIS . funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    FUNCTION           shift, and go to state 10
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 65
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 66
    const       go to state 37


State 23

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 24

   43 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 67


State 25

    0 $accept: program . $end

    $end  shift, and go to state 68


State 26

    1 program: stmt . program

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 69
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 27

    3 stmt: expr . SEMICOLON
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    MOD        shift, and go to state 79
    MULTIPLY   shift, and go to state 80
    DIV        shift, and go to state 81
    PLUS       shift, and go to state 82
    SEMICOLON  shift, and go to state 83


State 28

   27 expr: term .

    $default  reduce using rule 27 (expr)


State 29

   29 term: primary .

    $default  reduce using rule 29 (term)


State 30

   32 term: lvalue . PLUSPLUS
   34     | lvalue . MINUSMINUS
   36 primary: lvalue .
   45 assignexpr: lvalue . EQUALEQUAL expr
   46 member: lvalue . DOT ID
   47       | lvalue . START_BRACKET expr END_BRACKET
   51 call: lvalue . callsuffix

    EQUALEQUAL         shift, and go to state 84
    MINUSMINUS         shift, and go to state 85
    PLUSPLUS           shift, and go to state 86
    START_BRACKET      shift, and go to state 87
    START_PARENTHESIS  shift, and go to state 88
    DOT                shift, and go to state 89
    DOUBLE_DOT         shift, and go to state 90

    $default  reduce using rule 36 (primary)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 31

   13 expr: assignexpr .

    $default  reduce using rule 13 (expr)


State 32

   44 lvalue: member .

    $default  reduce using rule 44 (lvalue)


State 33

   37 primary: call .
   48 member: call . DOT ID
   49       | call . START_BRACKET expr END_BRACKET
   50 call: call . START_PARENTHESIS elist END_PARENTHESIS

    START_BRACKET      shift, and go to state 94
    START_PARENTHESIS  shift, and go to state 95
    DOT                shift, and go to state 96

    $default  reduce using rule 37 (primary)


State 34

   38 primary: objectdef .

    $default  reduce using rule 38 (primary)


State 35

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 36

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 37

   40 primary: const .

    $default  reduce using rule 40 (primary)


State 38

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 39

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 41

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 42

   42 lvalue: LOCAL ID .

    $default  reduce using rule 42 (lvalue)


State 43

   81 ifstmt: IF START_PARENTHESIS . expr END_PARENTHESIS stmt
   82       | IF START_PARENTHESIS . expr END_PARENTHESIS stmt ELSE stmt

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 97
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 44

   83 whilestmt: WHILE START_PARENTHESIS . expr END_PARENTHESIS stmt

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 98
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 45

   84 forstmt: FOR START_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist END_PARENTHESIS stmt

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 58 (elist)

    expr        go to state 61
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 99
    objectdef   go to state 34
    const       go to state 37


State 46

   70 funcdef: FUNCTION ID . START_PARENTHESIS idlist END_PARENTHESIS block

    START_PARENTHESIS  shift, and go to state 100


State 47

   69 funcdef: FUNCTION START_PARENTHESIS . idlist END_PARENTHESIS block

    ID  shift, and go to state 101

    $default  reduce using rule 78 (idlist)

    idlist  go to state 102


State 48

   86 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 86 (returnstmt)


State 49

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   85 returnstmt: RETURN expr . SEMICOLON

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    MOD        shift, and go to state 79
    MULTIPLY   shift, and go to state 80
    DIV        shift, and go to state 81
    PLUS       shift, and go to state 82
    SEMICOLON  shift, and go to state 103


State 50

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 51

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 52

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   35 term: NOT expr .

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    MOD        shift, and go to state 79
    MULTIPLY   shift, and go to state 80
    DIV        shift, and go to state 81
    PLUS       shift, and go to state 82

    $default  reduce using rule 35 (term)


State 53

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   30 term: MINUS expr .

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    MOD        shift, and go to state 79
    MULTIPLY   shift, and go to state 80
    DIV        shift, and go to state 81
    PLUS       shift, and go to state 82

    $default  reduce using rule 30 (term)


State 54

   52 call: START_PARENTHESIS . funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    FUNCTION  shift, and go to state 10

    funcdef  go to state 104


State 55

   33 term: MINUSMINUS lvalue .
   46 member: lvalue . DOT ID
   47       | lvalue . START_BRACKET expr END_BRACKET
   51 call: lvalue . callsuffix

    START_BRACKET      shift, and go to state 87
    START_PARENTHESIS  shift, and go to state 88
    DOT                shift, and go to state 89
    DOUBLE_DOT         shift, and go to state 90

    $default  reduce using rule 33 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 56

   48 member: call . DOT ID
   49       | call . START_BRACKET expr END_BRACKET
   50 call: call . START_PARENTHESIS elist END_PARENTHESIS

    START_BRACKET      shift, and go to state 94
    START_PARENTHESIS  shift, and go to state 95
    DOT                shift, and go to state 96


State 57

   31 term: PLUSPLUS lvalue .
   46 member: lvalue . DOT ID
   47       | lvalue . START_BRACKET expr END_BRACKET
   51 call: lvalue . callsuffix

    START_BRACKET      shift, and go to state 87
    START_PARENTHESIS  shift, and go to state 88
    DOT                shift, and go to state 89
    DOUBLE_DOT         shift, and go to state 90

    $default  reduce using rule 31 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 58

   67 block: CURLY_START_BRACKET CURLY_END_BRACKET .

    $default  reduce using rule 67 (block)


State 59

   68 block: CURLY_START_BRACKET stmt . program CURLY_END_BRACKET

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 105
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 60

   66 indexedelem: CURLY_START_BRACKET . expr COLON expr CURLY_END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 106
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 61

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   57 elist: expr . commaexpr

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    MOD        shift, and go to state 79
    MULTIPLY   shift, and go to state 80
    DIV        shift, and go to state 81
    PLUS       shift, and go to state 82
    COMMA      shift, and go to state 107

    $default  reduce using rule 60 (commaexpr)

    commaexpr  go to state 108


State 62

   61 objectdef: START_BRACKET elist . END_BRACKET

    END_BRACKET  shift, and go to state 109


State 63

   62 objectdef: START_BRACKET indexed . END_BRACKET

    END_BRACKET  shift, and go to state 110


State 64

   63 indexed: indexedelem . commaindexedelem

    COMMA  shift, and go to state 111

    $default  reduce using rule 65 (commaindexedelem)

    commaindexedelem  go to state 112


State 65

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   28 term: START_PARENTHESIS expr . END_PARENTHESIS

    AND              shift, and go to state 70
    OR               shift, and go to state 71
    EQUAL            shift, and go to state 72
    MINUS            shift, and go to state 73
    DIFFER           shift, and go to state 74
    BIGGER           shift, and go to state 75
    LESS             shift, and go to state 76
    BIGGER_EQ        shift, and go to state 77
    LESS_EQ          shift, and go to state 78
    MOD              shift, and go to state 79
    MULTIPLY         shift, and go to state 80
    DIV              shift, and go to state 81
    PLUS             shift, and go to state 82
    END_PARENTHESIS  shift, and go to state 113


State 66

   39 primary: START_PARENTHESIS funcdef . END_PARENTHESIS
   52 call: START_PARENTHESIS funcdef . END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 114


State 67

   43 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 43 (lvalue)


State 68

    0 $accept: program $end .

    $default  accept


State 69

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 70

   25 expr: expr AND . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 115
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 71

   26 expr: expr OR . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 116
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 72

   23 expr: expr EQUAL . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 117
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 73

   15 expr: expr MINUS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 118
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 74

   24 expr: expr DIFFER . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 119
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 75

   19 expr: expr BIGGER . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 120
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   21 expr: expr LESS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 121
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   20 expr: expr BIGGER_EQ . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 122
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   22 expr: expr LESS_EQ . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 123
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   18 expr: expr MOD . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   16 expr: expr MULTIPLY . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 125
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   17 expr: expr DIV . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 126
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

   14 expr: expr PLUS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 127
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 83

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 84

   45 assignexpr: lvalue EQUALEQUAL . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 128
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 85

   34 term: lvalue MINUSMINUS .

    $default  reduce using rule 34 (term)


State 86

   32 term: lvalue PLUSPLUS .

    $default  reduce using rule 32 (term)


State 87

   47 member: lvalue START_BRACKET . expr END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 129
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 88

   55 normcall: START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 58 (elist)

    expr        go to state 61
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 130
    objectdef   go to state 34
    const       go to state 37


State 89

   46 member: lvalue DOT . ID

    ID  shift, and go to state 131


State 90

   56 methodcall: DOUBLE_DOT . ID START_PARENTHESIS elist END_PARENTHESIS

    ID  shift, and go to state 132


State 91

   51 call: lvalue callsuffix .

    $default  reduce using rule 51 (call)


State 92

   53 callsuffix: normcall .

    $default  reduce using rule 53 (callsuffix)


State 93

   54 callsuffix: methodcall .

    $default  reduce using rule 54 (callsuffix)


State 94

   49 member: call START_BRACKET . expr END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 133
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 95

   50 call: call START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 58 (elist)

    expr        go to state 61
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 134
    objectdef   go to state 34
    const       go to state 37


State 96

   48 member: call DOT . ID

    ID  shift, and go to state 135


State 97

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   81 ifstmt: IF START_PARENTHESIS expr . END_PARENTHESIS stmt
   82       | IF START_PARENTHESIS expr . END_PARENTHESIS stmt ELSE stmt

    AND              shift, and go to state 70
    OR               shift, and go to state 71
    EQUAL            shift, and go to state 72
    MINUS            shift, and go to state 73
    DIFFER           shift, and go to state 74
    BIGGER           shift, and go to state 75
    LESS             shift, and go to state 76
    BIGGER_EQ        shift, and go to state 77
    LESS_EQ          shift, and go to state 78
    MOD              shift, and go to state 79
    MULTIPLY         shift, and go to state 80
    DIV              shift, and go to state 81
    PLUS             shift, and go to state 82
    END_PARENTHESIS  shift, and go to state 136


State 98

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   83 whilestmt: WHILE START_PARENTHESIS expr . END_PARENTHESIS stmt

    AND              shift, and go to state 70
    OR               shift, and go to state 71
    EQUAL            shift, and go to state 72
    MINUS            shift, and go to state 73
    DIFFER           shift, and go to state 74
    BIGGER           shift, and go to state 75
    LESS             shift, and go to state 76
    BIGGER_EQ        shift, and go to state 77
    LESS_EQ          shift, and go to state 78
    MOD              shift, and go to state 79
    MULTIPLY         shift, and go to state 80
    DIV              shift, and go to state 81
    PLUS             shift, and go to state 82
    END_PARENTHESIS  shift, and go to state 137


State 99

   84 forstmt: FOR START_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist END_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 138


State 100

   70 funcdef: FUNCTION ID START_PARENTHESIS . idlist END_PARENTHESIS block

    ID  shift, and go to state 101

    $default  reduce using rule 78 (idlist)

    idlist  go to state 139


State 101

   77 idlist: ID . commaid

    COMMA  shift, and go to state 140

    $default  reduce using rule 80 (commaid)

    commaid  go to state 141


State 102

   69 funcdef: FUNCTION START_PARENTHESIS idlist . END_PARENTHESIS block

    END_PARENTHESIS  shift, and go to state 142


State 103

   85 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 85 (returnstmt)


State 104

   52 call: START_PARENTHESIS funcdef . END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 143


State 105

   68 block: CURLY_START_BRACKET stmt program . CURLY_END_BRACKET

    CURLY_END_BRACKET  shift, and go to state 144


State 106

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   66 indexedelem: CURLY_START_BRACKET expr . COLON expr CURLY_END_BRACKET

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    MOD        shift, and go to state 79
    MULTIPLY   shift, and go to state 80
    DIV        shift, and go to state 81
    PLUS       shift, and go to state 82
    COLON      shift, and go to state 145


State 107

   59 commaexpr: COMMA . expr commaexpr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 146
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 108

   57 elist: expr commaexpr .

    $default  reduce using rule 57 (elist)


State 109

   61 objectdef: START_BRACKET elist END_BRACKET .

    $default  reduce using rule 61 (objectdef)


State 110

   62 objectdef: START_BRACKET indexed END_BRACKET .

    $default  reduce using rule 62 (objectdef)


State 111

   64 commaindexedelem: COMMA . indexedelem commaindexedelem

    CURLY_START_BRACKET  shift, and go to state 60

    indexedelem  go to state 147


State 112

   63 indexed: indexedelem commaindexedelem .

    $default  reduce using rule 63 (indexed)


State 113

   28 term: START_PARENTHESIS expr END_PARENTHESIS .

    $default  reduce using rule 28 (term)


State 114

   39 primary: START_PARENTHESIS funcdef END_PARENTHESIS .
   52 call: START_PARENTHESIS funcdef END_PARENTHESIS . START_PARENTHESIS elist END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 148

    $default  reduce using rule 39 (primary)


State 115

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . OR expr

    OR     shift, and go to state 71
    EQUAL  shift, and go to state 72

    $default  reduce using rule 25 (expr)


State 116

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   26     | expr OR expr .

    EQUAL  shift, and go to state 72

    $default  reduce using rule 26 (expr)


State 117

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   23     | expr EQUAL expr .
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    EQUAL  shift, and go to state 72

    $default  reduce using rule 23 (expr)


State 118

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78

    $default  reduce using rule 15 (expr)


State 119

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   24     | expr DIFFER expr .
   25     | expr . AND expr
   26     | expr . OR expr

    AND    shift, and go to state 70
    OR     shift, and go to state 71
    EQUAL  shift, and go to state 72

    DIFFER  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 120

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   19     | expr BIGGER expr .
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND     shift, and go to state 70
    OR      shift, and go to state 71
    EQUAL   shift, and go to state 72
    DIFFER  shift, and go to state 74

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 19 (expr)


State 121

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   21     | expr LESS expr .
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND     shift, and go to state 70
    OR      shift, and go to state 71
    EQUAL   shift, and go to state 72
    DIFFER  shift, and go to state 74

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 21 (expr)


State 122

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   20     | expr BIGGER_EQ expr .
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND     shift, and go to state 70
    OR      shift, and go to state 71
    EQUAL   shift, and go to state 72
    DIFFER  shift, and go to state 74

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 20 (expr)


State 123

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   22     | expr LESS_EQ expr .
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND     shift, and go to state 70
    OR      shift, and go to state 71
    EQUAL   shift, and go to state 72
    DIFFER  shift, and go to state 74

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 22 (expr)


State 124

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   18     | expr MOD expr .
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    PLUS       shift, and go to state 82

    $default  reduce using rule 18 (expr)


State 125

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   16     | expr MULTIPLY expr .
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    PLUS       shift, and go to state 82

    $default  reduce using rule 16 (expr)


State 126

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   17     | expr DIV expr .
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    PLUS       shift, and go to state 82

    $default  reduce using rule 17 (expr)


State 127

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78

    $default  reduce using rule 14 (expr)


State 128

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   45 assignexpr: lvalue EQUALEQUAL expr .

    AND    shift, and go to state 70
    OR     shift, and go to state 71
    EQUAL  shift, and go to state 72

    DIFFER  error (nonassociative)

    $default  reduce using rule 45 (assignexpr)


State 129

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   47 member: lvalue START_BRACKET expr . END_BRACKET

    AND          shift, and go to state 70
    OR           shift, and go to state 71
    EQUAL        shift, and go to state 72
    MINUS        shift, and go to state 73
    DIFFER       shift, and go to state 74
    BIGGER       shift, and go to state 75
    LESS         shift, and go to state 76
    BIGGER_EQ    shift, and go to state 77
    LESS_EQ      shift, and go to state 78
    MOD          shift, and go to state 79
    MULTIPLY     shift, and go to state 80
    DIV          shift, and go to state 81
    PLUS         shift, and go to state 82
    END_BRACKET  shift, and go to state 149


State 130

   55 normcall: START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 150


State 131

   46 member: lvalue DOT ID .

    $default  reduce using rule 46 (member)


State 132

   56 methodcall: DOUBLE_DOT ID . START_PARENTHESIS elist END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 151


State 133

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   49 member: call START_BRACKET expr . END_BRACKET

    AND          shift, and go to state 70
    OR           shift, and go to state 71
    EQUAL        shift, and go to state 72
    MINUS        shift, and go to state 73
    DIFFER       shift, and go to state 74
    BIGGER       shift, and go to state 75
    LESS         shift, and go to state 76
    BIGGER_EQ    shift, and go to state 77
    LESS_EQ      shift, and go to state 78
    MOD          shift, and go to state 79
    MULTIPLY     shift, and go to state 80
    DIV          shift, and go to state 81
    PLUS         shift, and go to state 82
    END_BRACKET  shift, and go to state 152


State 134

   50 call: call START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 153


State 135

   48 member: call DOT ID .

    $default  reduce using rule 48 (member)


State 136

   81 ifstmt: IF START_PARENTHESIS expr END_PARENTHESIS . stmt
   82       | IF START_PARENTHESIS expr END_PARENTHESIS . stmt ELSE stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 154
    expr        go to state 27
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 137

   83 whilestmt: WHILE START_PARENTHESIS expr END_PARENTHESIS . stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 155
    expr        go to state 27
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 138

   84 forstmt: FOR START_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist END_PARENTHESIS stmt

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 156
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 139

   70 funcdef: FUNCTION ID START_PARENTHESIS idlist . END_PARENTHESIS block

    END_PARENTHESIS  shift, and go to state 157


State 140

   79 commaid: COMMA . ID commaid

    ID  shift, and go to state 158


State 141

   77 idlist: ID commaid .

    $default  reduce using rule 77 (idlist)


State 142

   69 funcdef: FUNCTION START_PARENTHESIS idlist END_PARENTHESIS . block

    CURLY_START_BRACKET  shift, and go to state 20

    block  go to state 159


State 143

   52 call: START_PARENTHESIS funcdef END_PARENTHESIS . START_PARENTHESIS elist END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 148


State 144

   68 block: CURLY_START_BRACKET stmt program CURLY_END_BRACKET .

    $default  reduce using rule 68 (block)


State 145

   66 indexedelem: CURLY_START_BRACKET expr COLON . expr CURLY_END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 160
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 146

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   59 commaexpr: COMMA expr . commaexpr

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    MOD        shift, and go to state 79
    MULTIPLY   shift, and go to state 80
    DIV        shift, and go to state 81
    PLUS       shift, and go to state 82
    COMMA      shift, and go to state 107

    $default  reduce using rule 60 (commaexpr)

    commaexpr  go to state 161


State 147

   64 commaindexedelem: COMMA indexedelem . commaindexedelem

    COMMA  shift, and go to state 111

    $default  reduce using rule 65 (commaindexedelem)

    commaindexedelem  go to state 162


State 148

   52 call: START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 58 (elist)

    expr        go to state 61
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 163
    objectdef   go to state 34
    const       go to state 37


State 149

   47 member: lvalue START_BRACKET expr END_BRACKET .

    $default  reduce using rule 47 (member)


State 150

   55 normcall: START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 55 (normcall)


State 151

   56 methodcall: DOUBLE_DOT ID START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 58 (elist)

    expr        go to state 61
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 164
    objectdef   go to state 34
    const       go to state 37


State 152

   49 member: call START_BRACKET expr END_BRACKET .

    $default  reduce using rule 49 (member)


State 153

   50 call: call START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 50 (call)


State 154

   81 ifstmt: IF START_PARENTHESIS expr END_PARENTHESIS stmt .
   82       | IF START_PARENTHESIS expr END_PARENTHESIS stmt . ELSE stmt

    ELSE  shift, and go to state 165

    $default  reduce using rule 81 (ifstmt)


State 155

   83 whilestmt: WHILE START_PARENTHESIS expr END_PARENTHESIS stmt .

    $default  reduce using rule 83 (whilestmt)


State 156

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   84 forstmt: FOR START_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist END_PARENTHESIS stmt

    AND        shift, and go to state 70
    OR         shift, and go to state 71
    EQUAL      shift, and go to state 72
    MINUS      shift, and go to state 73
    DIFFER     shift, and go to state 74
    BIGGER     shift, and go to state 75
    LESS       shift, and go to state 76
    BIGGER_EQ  shift, and go to state 77
    LESS_EQ    shift, and go to state 78
    MOD        shift, and go to state 79
    MULTIPLY   shift, and go to state 80
    DIV        shift, and go to state 81
    PLUS       shift, and go to state 82
    SEMICOLON  shift, and go to state 166


State 157

   70 funcdef: FUNCTION ID START_PARENTHESIS idlist END_PARENTHESIS . block

    CURLY_START_BRACKET  shift, and go to state 20

    block  go to state 167


State 158

   79 commaid: COMMA ID . commaid

    COMMA  shift, and go to state 140

    $default  reduce using rule 80 (commaid)

    commaid  go to state 168


State 159

   69 funcdef: FUNCTION START_PARENTHESIS idlist END_PARENTHESIS block .

    $default  reduce using rule 69 (funcdef)


State 160

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTIPLY expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . BIGGER expr
   20     | expr . BIGGER_EQ expr
   21     | expr . LESS expr
   22     | expr . LESS_EQ expr
   23     | expr . EQUAL expr
   24     | expr . DIFFER expr
   25     | expr . AND expr
   26     | expr . OR expr
   66 indexedelem: CURLY_START_BRACKET expr COLON expr . CURLY_END_BRACKET

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    EQUAL              shift, and go to state 72
    MINUS              shift, and go to state 73
    DIFFER             shift, and go to state 74
    BIGGER             shift, and go to state 75
    LESS               shift, and go to state 76
    BIGGER_EQ          shift, and go to state 77
    LESS_EQ            shift, and go to state 78
    MOD                shift, and go to state 79
    MULTIPLY           shift, and go to state 80
    DIV                shift, and go to state 81
    PLUS               shift, and go to state 82
    CURLY_END_BRACKET  shift, and go to state 169


State 161

   59 commaexpr: COMMA expr commaexpr .

    $default  reduce using rule 59 (commaexpr)


State 162

   64 commaindexedelem: COMMA indexedelem commaindexedelem .

    $default  reduce using rule 64 (commaindexedelem)


State 163

   52 call: START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 170


State 164

   56 methodcall: DOUBLE_DOT ID START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 171


State 165

   82 ifstmt: IF START_PARENTHESIS expr END_PARENTHESIS stmt ELSE . stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 172
    expr        go to state 27
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 166

   84 forstmt: FOR START_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist END_PARENTHESIS stmt

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 58 (elist)

    expr        go to state 61
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 173
    objectdef   go to state 34
    const       go to state 37


State 167

   70 funcdef: FUNCTION ID START_PARENTHESIS idlist END_PARENTHESIS block .

    $default  reduce using rule 70 (funcdef)


State 168

   79 commaid: COMMA ID commaid .

    $default  reduce using rule 79 (commaid)


State 169

   66 indexedelem: CURLY_START_BRACKET expr COLON expr CURLY_END_BRACKET .

    $default  reduce using rule 66 (indexedelem)


State 170

   52 call: START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 52 (call)


State 171

   56 methodcall: DOUBLE_DOT ID START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 56 (methodcall)


State 172

   82 ifstmt: IF START_PARENTHESIS expr END_PARENTHESIS stmt ELSE stmt .

    $default  reduce using rule 82 (ifstmt)


State 173

   84 forstmt: FOR START_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . END_PARENTHESIS stmt

    END_PARENTHESIS  shift, and go to state 174


State 174

   84 forstmt: FOR START_PARENTHESIS elist SEMICOLON expr SEMICOLON elist END_PARENTHESIS . stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 175
    expr        go to state 27
    term        go to state 28
    primary     go to state 29
    lvalue      go to state 30
    assignexpr  go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 175

   84 forstmt: FOR START_PARENTHESIS elist SEMICOLON expr SEMICOLON elist END_PARENTHESIS stmt .

    $default  reduce using rule 84 (forstmt)
