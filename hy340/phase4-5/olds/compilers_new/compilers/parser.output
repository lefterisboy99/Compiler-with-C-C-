Terminals unused in grammar

   BLOCK_COMMENT
   LINE_COMMENT
   ESCAPE_CHARACTERS
   SPACE
   UNDEFINED


State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt stmts
    3      | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt

    9 $@1: %empty

   10 stmt: BREAK $@1 SEMICOLON

   11 $@2: %empty

   12 stmt: CONTINUE $@2 SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON

   16 expr: assignexpr
   17     | expr PLUS expr
   18     | expr MINUS expr
   19     | expr MULTIPLY expr
   20     | expr DIV expr
   21     | expr MOD expr
   22     | expr BIGGER expr
   23     | expr BIGGER_EQ expr
   24     | expr LESS expr
   25     | expr LESS_EQ expr
   26     | expr EQUAL expr
   27     | expr DIFFER expr

   28 $@3: %empty

   29 expr: expr AND $@3 Q expr

   30 $@4: %empty

   31 expr: expr OR $@4 Q expr
   32     | term

   33 Q: %empty

   34 term: START_PARENTHESIS expr END_PARENTHESIS
   35     | primary
   36     | MINUS expr
   37     | PLUSPLUS lvalue

   38 $@5: %empty

   39 term: lvalue $@5 PLUSPLUS
   40     | MINUSMINUS lvalue

   41 $@6: %empty

   42 term: lvalue $@6 MINUSMINUS
   43     | NOT expr

   44 primary: lvalue
   45        | call
   46        | objectdef
   47        | START_PARENTHESIS funcdef END_PARENTHESIS
   48        | const

   49 lvalue: ID
   50       | LOCAL ID
   51       | DOUBLE_COLON ID
   52       | member

   53 $@7: %empty

   54 assignexpr: lvalue $@7 ASSIGN expr
   55           | call ASSIGN expr

   56 $@8: %empty

   57 member: lvalue DOT $@8 ID
   58       | lvalue START_BRACKET expr END_BRACKET

   59 $@9: %empty

   60 member: call DOT $@9 ID
   61       | call START_BRACKET expr END_BRACKET

   62 call: call START_PARENTHESIS elist END_PARENTHESIS
   63     | lvalue callsuffix
   64     | START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

   65 callsuffix: normcall
   66           | methodcall

   67 normcall: START_PARENTHESIS elist END_PARENTHESIS

   68 methodcall: DOUBLE_DOT ID START_PARENTHESIS elist END_PARENTHESIS

   69 $@10: %empty

   70 elist: expr $@10 commaexpr
   71      | %empty

   72 $@11: %empty

   73 commaexpr: COMMA expr $@11 commaexpr
   74          | %empty

   75 objectdef: START_BRACKET elist END_BRACKET
   76          | START_BRACKET indexed END_BRACKET

   77 indexed: indexedelem commaindexedelem

   78 commaindexedelem: COMMA indexedelem commaindexedelem
   79                 | %empty

   80 indexedelem: CURLY_START_BRACKET expr COLON expr CURLY_END_BRACKET

   81 $@12: %empty

   82 block: CURLY_START_BRACKET $@12 CURLY_END_BRACKET

   83 $@13: %empty

   84 block: CURLY_START_BRACKET $@13 stmt program CURLY_END_BRACKET

   85 $@14: %empty

   86 $@15: %empty

   87 $@16: %empty

   88 funcdef: FUNCTION $@14 START_PARENTHESIS $@15 idlist END_PARENTHESIS $@16 block

   89 $@17: %empty

   90 $@18: %empty

   91 $@19: %empty

   92 $@20: %empty

   93 funcdef: FUNCTION $@17 ID $@18 START_PARENTHESIS $@19 idlist END_PARENTHESIS $@20 block

   94 const: REAL
   95      | INTEGER
   96      | STRING
   97      | NIL
   98      | TRUE
   99      | FALSE

  100 $@21: %empty

  101 idlist: ID $@21 commaid
  102       | %empty

  103 $@22: %empty

  104 commaid: COMMA ID $@22 commaid
  105        | %empty

  106 ifprefix: IF START_PARENTHESIS expr END_PARENTHESIS

  107 ifstmt: ifprefix stmt
  108       | ifprefix stmt elseprefix stmt

  109 elseprefix: ELSE

  110 whilestart: WHILE

  111 whilecond: START_PARENTHESIS expr END_PARENTHESIS

  112 whilestmt: whilestart whilecond stmt

  113 N: %empty

  114 M: %empty

  115 $@23: %empty

  116 forprefix: FOR $@23 START_PARENTHESIS elist SEMICOLON M expr SEMICOLON

  117 forstmt: forprefix N elist END_PARENTHESIS N stmt N

  118 $@24: %empty

  119 returnstmt: RETURN $@24 expr SEMICOLON

  120 $@25: %empty

  121 returnstmt: RETURN $@25 SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ASSIGN (258) 54 55
STRING (259) 96
INTEGER (260) 95
REAL (261) 94
LOCAL (262) 50
NIL (263) 97
ID (264) 49 50 51 57 60 68 93 101 104
BLOCK_COMMENT (265)
LINE_COMMENT (266)
ESCAPE_CHARACTERS (267)
SPACE (268)
IF (269) 106
ELSE (270) 109
WHILE (271) 110
FOR (272) 116
FUNCTION (273) 88 93
RETURN (274) 119 121
BREAK (275) 10
CONTINUE (276) 12
AND (277) 29
NOT (278) 43
OR (279) 31
TRUE (280) 98
FALSE (281) 99
MINUS (282) 18 36
EQUAL (283) 26
DIFFER (284) 27
BIGGER (285) 22
LESS (286) 24
BIGGER_EQ (287) 23
LESS_EQ (288) 25
MINUSMINUS (289) 40 42
PLUSPLUS (290) 37 39
MOD (291) 21
MULTIPLY (292) 19
DIV (293) 20
PLUS (294) 17
CURLY_START_BRACKET (295) 80 82 84
CURLY_END_BRACKET (296) 80 82 84
START_BRACKET (297) 58 61 75 76
END_BRACKET (298) 58 61 75 76
START_PARENTHESIS (299) 34 47 62 64 67 68 88 93 106 111 116
END_PARENTHESIS (300) 34 47 62 64 67 68 88 93 106 111 117
SEMICOLON (301) 4 10 12 15 116 119 121
COMMA (302) 73 78 104
COLON (303) 80
DOUBLE_COLON (304) 51
DOT (305) 57 60
DOUBLE_DOT (306) 68
UNDEFINED (307)
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0 84
stmts (56)
    on left: 2 3, on right: 1 2
stmt (57)
    on left: 4 5 6 7 8 10 12 13 14 15, on right: 2 84 107 108 112 117
$@1 (58)
    on left: 9, on right: 10
$@2 (59)
    on left: 11, on right: 12
expr (60)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 29 31 32, on right:
    4 17 18 19 20 21 22 23 24 25 26 27 29 31 34 36 43 54 55 58 61 70
    73 80 106 111 116 119
$@3 (61)
    on left: 28, on right: 29
$@4 (62)
    on left: 30, on right: 31
Q (63)
    on left: 33, on right: 29 31
term (64)
    on left: 34 35 36 37 39 40 42 43, on right: 32
$@5 (65)
    on left: 38, on right: 39
$@6 (66)
    on left: 41, on right: 42
primary (67)
    on left: 44 45 46 47 48, on right: 35
lvalue (68)
    on left: 49 50 51 52, on right: 37 39 40 42 44 54 57 58 63
assignexpr (69)
    on left: 54 55, on right: 16
$@7 (70)
    on left: 53, on right: 54
member (71)
    on left: 57 58 60 61, on right: 52
$@8 (72)
    on left: 56, on right: 57
$@9 (73)
    on left: 59, on right: 60
call (74)
    on left: 62 63 64, on right: 45 55 60 61 62
callsuffix (75)
    on left: 65 66, on right: 63
normcall (76)
    on left: 67, on right: 65
methodcall (77)
    on left: 68, on right: 66
elist (78)
    on left: 70 71, on right: 62 64 67 68 75 116 117
$@10 (79)
    on left: 69, on right: 70
commaexpr (80)
    on left: 73 74, on right: 70 73
$@11 (81)
    on left: 72, on right: 73
objectdef (82)
    on left: 75 76, on right: 46
indexed (83)
    on left: 77, on right: 76
commaindexedelem (84)
    on left: 78 79, on right: 77 78
indexedelem (85)
    on left: 80, on right: 77 78
block (86)
    on left: 82 84, on right: 13 88 93
$@12 (87)
    on left: 81, on right: 82
$@13 (88)
    on left: 83, on right: 84
funcdef (89)
    on left: 88 93, on right: 14 47 64
$@14 (90)
    on left: 85, on right: 88
$@15 (91)
    on left: 86, on right: 88
$@16 (92)
    on left: 87, on right: 88
$@17 (93)
    on left: 89, on right: 93
$@18 (94)
    on left: 90, on right: 93
$@19 (95)
    on left: 91, on right: 93
$@20 (96)
    on left: 92, on right: 93
const (97)
    on left: 94 95 96 97 98 99, on right: 48
idlist (98)
    on left: 101 102, on right: 88 93
$@21 (99)
    on left: 100, on right: 101
commaid (100)
    on left: 104 105, on right: 101 104
$@22 (101)
    on left: 103, on right: 104
ifprefix (102)
    on left: 106, on right: 107 108
ifstmt (103)
    on left: 107 108, on right: 5
elseprefix (104)
    on left: 109, on right: 108
whilestart (105)
    on left: 110, on right: 112
whilecond (106)
    on left: 111, on right: 112
whilestmt (107)
    on left: 112, on right: 6
N (108)
    on left: 113, on right: 117
M (109)
    on left: 114, on right: 116
forprefix (110)
    on left: 116, on right: 117
$@23 (111)
    on left: 115, on right: 116
forstmt (112)
    on left: 117, on right: 7
returnstmt (113)
    on left: 119 121, on right: 8
$@24 (114)
    on left: 118, on right: 119
$@25 (115)
    on left: 120, on right: 121


State 0

    0 $accept: . program $end

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 1

   96 const: STRING .

    $default  reduce using rule 96 (const)


State 2

   95 const: INTEGER .

    $default  reduce using rule 95 (const)


State 3

   94 const: REAL .

    $default  reduce using rule 94 (const)


State 4

   50 lvalue: LOCAL . ID

    ID  shift, and go to state 46


State 5

   97 const: NIL .

    $default  reduce using rule 97 (const)


State 6

   49 lvalue: ID .

    $default  reduce using rule 49 (lvalue)


State 7

  106 ifprefix: IF . START_PARENTHESIS expr END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 47


State 8

  110 whilestart: WHILE .

    $default  reduce using rule 110 (whilestart)


State 9

  116 forprefix: FOR . $@23 START_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    $default  reduce using rule 115 ($@23)

    $@23  go to state 48


State 10

   88 funcdef: FUNCTION . $@14 START_PARENTHESIS $@15 idlist END_PARENTHESIS $@16 block
   93        | FUNCTION . $@17 ID $@18 START_PARENTHESIS $@19 idlist END_PARENTHESIS $@20 block

    ID        reduce using rule 89 ($@17)
    $default  reduce using rule 85 ($@14)

    $@14  go to state 49
    $@17  go to state 50


State 11

  119 returnstmt: RETURN . $@24 expr SEMICOLON
  121           | RETURN . $@25 SEMICOLON

    SEMICOLON  reduce using rule 120 ($@25)
    $default   reduce using rule 118 ($@24)

    $@24  go to state 51
    $@25  go to state 52


State 12

   10 stmt: BREAK . $@1 SEMICOLON

    $default  reduce using rule 9 ($@1)

    $@1  go to state 53


State 13

   12 stmt: CONTINUE . $@2 SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 54


State 14

   43 term: NOT . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 55
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 15

   98 const: TRUE .

    $default  reduce using rule 98 (const)


State 16

   99 const: FALSE .

    $default  reduce using rule 99 (const)


State 17

   36 term: MINUS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 56
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 18

   40 term: MINUSMINUS . lvalue

    LOCAL              shift, and go to state 4
    ID                 shift, and go to state 6
    START_PARENTHESIS  shift, and go to state 57
    DOUBLE_COLON       shift, and go to state 24

    lvalue  go to state 58
    member  go to state 33
    call    go to state 59


State 19

   37 term: PLUSPLUS . lvalue

    LOCAL              shift, and go to state 4
    ID                 shift, and go to state 6
    START_PARENTHESIS  shift, and go to state 57
    DOUBLE_COLON       shift, and go to state 24

    lvalue  go to state 60
    member  go to state 33
    call    go to state 59


State 20

   82 block: CURLY_START_BRACKET . $@12 CURLY_END_BRACKET
   84      | CURLY_START_BRACKET . $@13 stmt program CURLY_END_BRACKET

    CURLY_END_BRACKET  reduce using rule 81 ($@12)
    $default           reduce using rule 83 ($@13)

    $@12  go to state 61
    $@13  go to state 62


State 21

   75 objectdef: START_BRACKET . elist END_BRACKET
   76          | START_BRACKET . indexed END_BRACKET

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 63
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 71 (elist)

    expr         go to state 64
    term         go to state 29
    primary      go to state 30
    lvalue       go to state 31
    assignexpr   go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 65
    objectdef    go to state 35
    indexed      go to state 66
    indexedelem  go to state 67
    const        go to state 38


State 22

   34 term: START_PARENTHESIS . expr END_PARENTHESIS
   47 primary: START_PARENTHESIS . funcdef END_PARENTHESIS
   64 call: START_PARENTHESIS . funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    FUNCTION           shift, and go to state 10
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 68
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 69
    const       go to state 38


State 23

   15 stmt: SEMICOLON .

    $default  reduce using rule 15 (stmt)


State 24

   51 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 70


State 25

    0 $accept: program . $end

    $end  shift, and go to state 71


State 26

    1 program: stmts .

    $default  reduce using rule 1 (program)


State 27

    2 stmts: stmt . stmts

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    stmts       go to state 72
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 28

    4 stmt: expr . SEMICOLON
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85
    SEMICOLON  shift, and go to state 86


State 29

   32 expr: term .

    $default  reduce using rule 32 (expr)


State 30

   35 term: primary .

    $default  reduce using rule 35 (term)


State 31

   39 term: lvalue . $@5 PLUSPLUS
   42     | lvalue . $@6 MINUSMINUS
   44 primary: lvalue .
   54 assignexpr: lvalue . $@7 ASSIGN expr
   57 member: lvalue . DOT $@8 ID
   58       | lvalue . START_BRACKET expr END_BRACKET
   63 call: lvalue . callsuffix

    START_BRACKET      shift, and go to state 87
    START_PARENTHESIS  shift, and go to state 88
    DOT                shift, and go to state 89
    DOUBLE_DOT         shift, and go to state 90

    ASSIGN      reduce using rule 53 ($@7)
    MINUSMINUS  reduce using rule 41 ($@6)
    PLUSPLUS    reduce using rule 38 ($@5)
    $default    reduce using rule 44 (primary)

    $@5         go to state 91
    $@6         go to state 92
    $@7         go to state 93
    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 32

   16 expr: assignexpr .

    $default  reduce using rule 16 (expr)


State 33

   52 lvalue: member .

    $default  reduce using rule 52 (lvalue)


State 34

   45 primary: call .
   55 assignexpr: call . ASSIGN expr
   60 member: call . DOT $@9 ID
   61       | call . START_BRACKET expr END_BRACKET
   62 call: call . START_PARENTHESIS elist END_PARENTHESIS

    ASSIGN             shift, and go to state 97
    START_BRACKET      shift, and go to state 98
    START_PARENTHESIS  shift, and go to state 99
    DOT                shift, and go to state 100

    $default  reduce using rule 45 (primary)


State 35

   46 primary: objectdef .

    $default  reduce using rule 46 (primary)


State 36

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


State 37

   14 stmt: funcdef .

    $default  reduce using rule 14 (stmt)


State 38

   48 primary: const .

    $default  reduce using rule 48 (primary)


State 39

  107 ifstmt: ifprefix . stmt
  108       | ifprefix . stmt elseprefix stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 101
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 40

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 41

  112 whilestmt: whilestart . whilecond stmt

    START_PARENTHESIS  shift, and go to state 102

    whilecond  go to state 103


State 42

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 43

  117 forstmt: forprefix . N elist END_PARENTHESIS N stmt N

    $default  reduce using rule 113 (N)

    N  go to state 104


State 44

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 45

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 46

   50 lvalue: LOCAL ID .

    $default  reduce using rule 50 (lvalue)


State 47

  106 ifprefix: IF START_PARENTHESIS . expr END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 105
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 48

  116 forprefix: FOR $@23 . START_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    START_PARENTHESIS  shift, and go to state 106


State 49

   88 funcdef: FUNCTION $@14 . START_PARENTHESIS $@15 idlist END_PARENTHESIS $@16 block

    START_PARENTHESIS  shift, and go to state 107


State 50

   93 funcdef: FUNCTION $@17 . ID $@18 START_PARENTHESIS $@19 idlist END_PARENTHESIS $@20 block

    ID  shift, and go to state 108


State 51

  119 returnstmt: RETURN $@24 . expr SEMICOLON

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 109
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 52

  121 returnstmt: RETURN $@25 . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 53

   10 stmt: BREAK $@1 . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 54

   12 stmt: CONTINUE $@2 . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 55

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   43 term: NOT expr .

    $default  reduce using rule 43 (term)


State 56

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   36 term: MINUS expr .

    $default  reduce using rule 36 (term)


State 57

   64 call: START_PARENTHESIS . funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    FUNCTION  shift, and go to state 10

    funcdef  go to state 113


State 58

   40 term: MINUSMINUS lvalue .
   57 member: lvalue . DOT $@8 ID
   58       | lvalue . START_BRACKET expr END_BRACKET
   63 call: lvalue . callsuffix

    START_BRACKET      shift, and go to state 87
    START_PARENTHESIS  shift, and go to state 88
    DOT                shift, and go to state 89
    DOUBLE_DOT         shift, and go to state 90

    $default  reduce using rule 40 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 59

   60 member: call . DOT $@9 ID
   61       | call . START_BRACKET expr END_BRACKET
   62 call: call . START_PARENTHESIS elist END_PARENTHESIS

    START_BRACKET      shift, and go to state 98
    START_PARENTHESIS  shift, and go to state 99
    DOT                shift, and go to state 100


State 60

   37 term: PLUSPLUS lvalue .
   57 member: lvalue . DOT $@8 ID
   58       | lvalue . START_BRACKET expr END_BRACKET
   63 call: lvalue . callsuffix

    START_BRACKET      shift, and go to state 87
    START_PARENTHESIS  shift, and go to state 88
    DOT                shift, and go to state 89
    DOUBLE_DOT         shift, and go to state 90

    $default  reduce using rule 37 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 61

   82 block: CURLY_START_BRACKET $@12 . CURLY_END_BRACKET

    CURLY_END_BRACKET  shift, and go to state 114


State 62

   84 block: CURLY_START_BRACKET $@13 . stmt program CURLY_END_BRACKET

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 115
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 63

   80 indexedelem: CURLY_START_BRACKET . expr COLON expr CURLY_END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 116
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 64

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   70 elist: expr . $@10 commaexpr

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85

    $default  reduce using rule 69 ($@10)

    $@10  go to state 117


State 65

   75 objectdef: START_BRACKET elist . END_BRACKET

    END_BRACKET  shift, and go to state 118


State 66

   76 objectdef: START_BRACKET indexed . END_BRACKET

    END_BRACKET  shift, and go to state 119


State 67

   77 indexed: indexedelem . commaindexedelem

    COMMA  shift, and go to state 120

    $default  reduce using rule 79 (commaindexedelem)

    commaindexedelem  go to state 121


State 68

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   34 term: START_PARENTHESIS expr . END_PARENTHESIS

    AND              shift, and go to state 73
    OR               shift, and go to state 74
    MINUS            shift, and go to state 75
    EQUAL            shift, and go to state 76
    DIFFER           shift, and go to state 77
    BIGGER           shift, and go to state 78
    LESS             shift, and go to state 79
    BIGGER_EQ        shift, and go to state 80
    LESS_EQ          shift, and go to state 81
    MOD              shift, and go to state 82
    MULTIPLY         shift, and go to state 83
    DIV              shift, and go to state 84
    PLUS             shift, and go to state 85
    END_PARENTHESIS  shift, and go to state 122


State 69

   47 primary: START_PARENTHESIS funcdef . END_PARENTHESIS
   64 call: START_PARENTHESIS funcdef . END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 123


State 70

   51 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 51 (lvalue)


State 71

    0 $accept: program $end .

    $default  accept


State 72

    2 stmts: stmt stmts .

    $default  reduce using rule 2 (stmts)


State 73

   29 expr: expr AND . $@3 Q expr

    $default  reduce using rule 28 ($@3)

    $@3  go to state 124


State 74

   31 expr: expr OR . $@4 Q expr

    $default  reduce using rule 30 ($@4)

    $@4  go to state 125


State 75

   18 expr: expr MINUS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   26 expr: expr EQUAL . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   27 expr: expr DIFFER . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   22 expr: expr BIGGER . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   24 expr: expr LESS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 130
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   23 expr: expr BIGGER_EQ . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 131
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

   25 expr: expr LESS_EQ . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 82

   21 expr: expr MOD . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 133
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 83

   19 expr: expr MULTIPLY . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 134
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 84

   20 expr: expr DIV . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 135
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 85

   17 expr: expr PLUS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 136
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 86

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 87

   58 member: lvalue START_BRACKET . expr END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 137
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 88

   67 normcall: START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 71 (elist)

    expr        go to state 64
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 138
    objectdef   go to state 35
    const       go to state 38


State 89

   57 member: lvalue DOT . $@8 ID

    $default  reduce using rule 56 ($@8)

    $@8  go to state 139


State 90

   68 methodcall: DOUBLE_DOT . ID START_PARENTHESIS elist END_PARENTHESIS

    ID  shift, and go to state 140


State 91

   39 term: lvalue $@5 . PLUSPLUS

    PLUSPLUS  shift, and go to state 141


State 92

   42 term: lvalue $@6 . MINUSMINUS

    MINUSMINUS  shift, and go to state 142


State 93

   54 assignexpr: lvalue $@7 . ASSIGN expr

    ASSIGN  shift, and go to state 143


State 94

   63 call: lvalue callsuffix .

    $default  reduce using rule 63 (call)


State 95

   65 callsuffix: normcall .

    $default  reduce using rule 65 (callsuffix)


State 96

   66 callsuffix: methodcall .

    $default  reduce using rule 66 (callsuffix)


State 97

   55 assignexpr: call ASSIGN . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 144
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 98

   61 member: call START_BRACKET . expr END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 145
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 99

   62 call: call START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 71 (elist)

    expr        go to state 64
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 146
    objectdef   go to state 35
    const       go to state 38


State 100

   60 member: call DOT . $@9 ID

    $default  reduce using rule 59 ($@9)

    $@9  go to state 147


State 101

  107 ifstmt: ifprefix stmt .
  108       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 148

    ELSE      [reduce using rule 107 (ifstmt)]
    $default  reduce using rule 107 (ifstmt)

    elseprefix  go to state 149


State 102

  111 whilecond: START_PARENTHESIS . expr END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 150
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 103

  112 whilestmt: whilestart whilecond . stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 151
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 104

  117 forstmt: forprefix N . elist END_PARENTHESIS N stmt N

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 71 (elist)

    expr        go to state 64
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 152
    objectdef   go to state 35
    const       go to state 38


State 105

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
  106 ifprefix: IF START_PARENTHESIS expr . END_PARENTHESIS

    AND              shift, and go to state 73
    OR               shift, and go to state 74
    MINUS            shift, and go to state 75
    EQUAL            shift, and go to state 76
    DIFFER           shift, and go to state 77
    BIGGER           shift, and go to state 78
    LESS             shift, and go to state 79
    BIGGER_EQ        shift, and go to state 80
    LESS_EQ          shift, and go to state 81
    MOD              shift, and go to state 82
    MULTIPLY         shift, and go to state 83
    DIV              shift, and go to state 84
    PLUS             shift, and go to state 85
    END_PARENTHESIS  shift, and go to state 153


State 106

  116 forprefix: FOR $@23 START_PARENTHESIS . elist SEMICOLON M expr SEMICOLON

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 71 (elist)

    expr        go to state 64
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 154
    objectdef   go to state 35
    const       go to state 38


State 107

   88 funcdef: FUNCTION $@14 START_PARENTHESIS . $@15 idlist END_PARENTHESIS $@16 block

    $default  reduce using rule 86 ($@15)

    $@15  go to state 155


State 108

   93 funcdef: FUNCTION $@17 ID . $@18 START_PARENTHESIS $@19 idlist END_PARENTHESIS $@20 block

    $default  reduce using rule 90 ($@18)

    $@18  go to state 156


State 109

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
  119 returnstmt: RETURN $@24 expr . SEMICOLON

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85
    SEMICOLON  shift, and go to state 157


State 110

  121 returnstmt: RETURN $@25 SEMICOLON .

    $default  reduce using rule 121 (returnstmt)


State 111

   10 stmt: BREAK $@1 SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 112

   12 stmt: CONTINUE $@2 SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 113

   64 call: START_PARENTHESIS funcdef . END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 158


State 114

   82 block: CURLY_START_BRACKET $@12 CURLY_END_BRACKET .

    $default  reduce using rule 82 (block)


State 115

   84 block: CURLY_START_BRACKET $@13 stmt . program CURLY_END_BRACKET

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    program     go to state 159
    stmts       go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 116

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   80 indexedelem: CURLY_START_BRACKET expr . COLON expr CURLY_END_BRACKET

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85
    COLON      shift, and go to state 160


State 117

   70 elist: expr $@10 . commaexpr

    COMMA  shift, and go to state 161

    $default  reduce using rule 74 (commaexpr)

    commaexpr  go to state 162


State 118

   75 objectdef: START_BRACKET elist END_BRACKET .

    $default  reduce using rule 75 (objectdef)


State 119

   76 objectdef: START_BRACKET indexed END_BRACKET .

    $default  reduce using rule 76 (objectdef)


State 120

   78 commaindexedelem: COMMA . indexedelem commaindexedelem

    CURLY_START_BRACKET  shift, and go to state 63

    indexedelem  go to state 163


State 121

   77 indexed: indexedelem commaindexedelem .

    $default  reduce using rule 77 (indexed)


State 122

   34 term: START_PARENTHESIS expr END_PARENTHESIS .

    $default  reduce using rule 34 (term)


State 123

   47 primary: START_PARENTHESIS funcdef END_PARENTHESIS .
   64 call: START_PARENTHESIS funcdef END_PARENTHESIS . START_PARENTHESIS elist END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 164

    $default  reduce using rule 47 (primary)


State 124

   29 expr: expr AND $@3 . Q expr

    $default  reduce using rule 33 (Q)

    Q  go to state 165


State 125

   31 expr: expr OR $@4 . Q expr

    $default  reduce using rule 33 (Q)

    Q  go to state 166


State 126

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   18     | expr MINUS expr .
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MOD       shift, and go to state 82
    MULTIPLY  shift, and go to state 83
    DIV       shift, and go to state 84

    $default  reduce using rule 18 (expr)


State 127

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   26     | expr EQUAL expr .
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS      shift, and go to state 75
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85

    EQUAL   error (nonassociative)
    DIFFER  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 128

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   27     | expr DIFFER expr .
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS      shift, and go to state 75
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85

    EQUAL   error (nonassociative)
    DIFFER  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 129

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   22     | expr BIGGER expr .
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS     shift, and go to state 75
    MOD       shift, and go to state 82
    MULTIPLY  shift, and go to state 83
    DIV       shift, and go to state 84
    PLUS      shift, and go to state 85

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 22 (expr)


State 130

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   24     | expr LESS expr .
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS     shift, and go to state 75
    MOD       shift, and go to state 82
    MULTIPLY  shift, and go to state 83
    DIV       shift, and go to state 84
    PLUS      shift, and go to state 85

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 24 (expr)


State 131

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   23     | expr BIGGER_EQ expr .
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS     shift, and go to state 75
    MOD       shift, and go to state 82
    MULTIPLY  shift, and go to state 83
    DIV       shift, and go to state 84
    PLUS      shift, and go to state 85

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 23 (expr)


State 132

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   25     | expr LESS_EQ expr .
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS     shift, and go to state 75
    MOD       shift, and go to state 82
    MULTIPLY  shift, and go to state 83
    DIV       shift, and go to state 84
    PLUS      shift, and go to state 85

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 25 (expr)


State 133

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   21     | expr MOD expr .
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    $default  reduce using rule 21 (expr)


State 134

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   19     | expr MULTIPLY expr .
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    $default  reduce using rule 19 (expr)


State 135

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   20     | expr DIV expr .
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    $default  reduce using rule 20 (expr)


State 136

   17 expr: expr . PLUS expr
   17     | expr PLUS expr .
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MOD       shift, and go to state 82
    MULTIPLY  shift, and go to state 83
    DIV       shift, and go to state 84

    $default  reduce using rule 17 (expr)


State 137

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   58 member: lvalue START_BRACKET expr . END_BRACKET

    AND          shift, and go to state 73
    OR           shift, and go to state 74
    MINUS        shift, and go to state 75
    EQUAL        shift, and go to state 76
    DIFFER       shift, and go to state 77
    BIGGER       shift, and go to state 78
    LESS         shift, and go to state 79
    BIGGER_EQ    shift, and go to state 80
    LESS_EQ      shift, and go to state 81
    MOD          shift, and go to state 82
    MULTIPLY     shift, and go to state 83
    DIV          shift, and go to state 84
    PLUS         shift, and go to state 85
    END_BRACKET  shift, and go to state 167


State 138

   67 normcall: START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 168


State 139

   57 member: lvalue DOT $@8 . ID

    ID  shift, and go to state 169


State 140

   68 methodcall: DOUBLE_DOT ID . START_PARENTHESIS elist END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 170


State 141

   39 term: lvalue $@5 PLUSPLUS .

    $default  reduce using rule 39 (term)


State 142

   42 term: lvalue $@6 MINUSMINUS .

    $default  reduce using rule 42 (term)


State 143

   54 assignexpr: lvalue $@7 ASSIGN . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 171
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 144

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   55 assignexpr: call ASSIGN expr .

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85

    $default  reduce using rule 55 (assignexpr)


State 145

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   61 member: call START_BRACKET expr . END_BRACKET

    AND          shift, and go to state 73
    OR           shift, and go to state 74
    MINUS        shift, and go to state 75
    EQUAL        shift, and go to state 76
    DIFFER       shift, and go to state 77
    BIGGER       shift, and go to state 78
    LESS         shift, and go to state 79
    BIGGER_EQ    shift, and go to state 80
    LESS_EQ      shift, and go to state 81
    MOD          shift, and go to state 82
    MULTIPLY     shift, and go to state 83
    DIV          shift, and go to state 84
    PLUS         shift, and go to state 85
    END_BRACKET  shift, and go to state 172


State 146

   62 call: call START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 173


State 147

   60 member: call DOT $@9 . ID

    ID  shift, and go to state 174


State 148

  109 elseprefix: ELSE .

    $default  reduce using rule 109 (elseprefix)


State 149

  108 ifstmt: ifprefix stmt elseprefix . stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 175
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 150

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
  111 whilecond: START_PARENTHESIS expr . END_PARENTHESIS

    AND              shift, and go to state 73
    OR               shift, and go to state 74
    MINUS            shift, and go to state 75
    EQUAL            shift, and go to state 76
    DIFFER           shift, and go to state 77
    BIGGER           shift, and go to state 78
    LESS             shift, and go to state 79
    BIGGER_EQ        shift, and go to state 80
    LESS_EQ          shift, and go to state 81
    MOD              shift, and go to state 82
    MULTIPLY         shift, and go to state 83
    DIV              shift, and go to state 84
    PLUS             shift, and go to state 85
    END_PARENTHESIS  shift, and go to state 176


State 151

  112 whilestmt: whilestart whilecond stmt .

    $default  reduce using rule 112 (whilestmt)


State 152

  117 forstmt: forprefix N elist . END_PARENTHESIS N stmt N

    END_PARENTHESIS  shift, and go to state 177


State 153

  106 ifprefix: IF START_PARENTHESIS expr END_PARENTHESIS .

    $default  reduce using rule 106 (ifprefix)


State 154

  116 forprefix: FOR $@23 START_PARENTHESIS elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 178


State 155

   88 funcdef: FUNCTION $@14 START_PARENTHESIS $@15 . idlist END_PARENTHESIS $@16 block

    ID  shift, and go to state 179

    $default  reduce using rule 102 (idlist)

    idlist  go to state 180


State 156

   93 funcdef: FUNCTION $@17 ID $@18 . START_PARENTHESIS $@19 idlist END_PARENTHESIS $@20 block

    START_PARENTHESIS  shift, and go to state 181


State 157

  119 returnstmt: RETURN $@24 expr SEMICOLON .

    $default  reduce using rule 119 (returnstmt)


State 158

   64 call: START_PARENTHESIS funcdef END_PARENTHESIS . START_PARENTHESIS elist END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 164


State 159

   84 block: CURLY_START_BRACKET $@13 stmt program . CURLY_END_BRACKET

    CURLY_END_BRACKET  shift, and go to state 182


State 160

   80 indexedelem: CURLY_START_BRACKET expr COLON . expr CURLY_END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 183
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 161

   73 commaexpr: COMMA . expr $@11 commaexpr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 184
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 162

   70 elist: expr $@10 commaexpr .

    $default  reduce using rule 70 (elist)


State 163

   78 commaindexedelem: COMMA indexedelem . commaindexedelem

    COMMA  shift, and go to state 120

    $default  reduce using rule 79 (commaindexedelem)

    commaindexedelem  go to state 185


State 164

   64 call: START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 71 (elist)

    expr        go to state 64
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 186
    objectdef   go to state 35
    const       go to state 38


State 165

   29 expr: expr AND $@3 Q . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 187
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 166

   31 expr: expr OR $@4 Q . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 188
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 167

   58 member: lvalue START_BRACKET expr END_BRACKET .

    $default  reduce using rule 58 (member)


State 168

   67 normcall: START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 67 (normcall)


State 169

   57 member: lvalue DOT $@8 ID .

    $default  reduce using rule 57 (member)


State 170

   68 methodcall: DOUBLE_DOT ID START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 71 (elist)

    expr        go to state 64
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 189
    objectdef   go to state 35
    const       go to state 38


State 171

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   54 assignexpr: lvalue $@7 ASSIGN expr .

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85

    $default  reduce using rule 54 (assignexpr)


State 172

   61 member: call START_BRACKET expr END_BRACKET .

    $default  reduce using rule 61 (member)


State 173

   62 call: call START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 62 (call)


State 174

   60 member: call DOT $@9 ID .

    $default  reduce using rule 60 (member)


State 175

  108 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 108 (ifstmt)


State 176

  111 whilecond: START_PARENTHESIS expr END_PARENTHESIS .

    $default  reduce using rule 111 (whilecond)


State 177

  117 forstmt: forprefix N elist END_PARENTHESIS . N stmt N

    $default  reduce using rule 113 (N)

    N  go to state 190


State 178

  116 forprefix: FOR $@23 START_PARENTHESIS elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 114 (M)

    M  go to state 191


State 179

  101 idlist: ID . $@21 commaid

    $default  reduce using rule 100 ($@21)

    $@21  go to state 192


State 180

   88 funcdef: FUNCTION $@14 START_PARENTHESIS $@15 idlist . END_PARENTHESIS $@16 block

    END_PARENTHESIS  shift, and go to state 193


State 181

   93 funcdef: FUNCTION $@17 ID $@18 START_PARENTHESIS . $@19 idlist END_PARENTHESIS $@20 block

    $default  reduce using rule 91 ($@19)

    $@19  go to state 194


State 182

   84 block: CURLY_START_BRACKET $@13 stmt program CURLY_END_BRACKET .

    $default  reduce using rule 84 (block)


State 183

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   80 indexedelem: CURLY_START_BRACKET expr COLON expr . CURLY_END_BRACKET

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    MINUS              shift, and go to state 75
    EQUAL              shift, and go to state 76
    DIFFER             shift, and go to state 77
    BIGGER             shift, and go to state 78
    LESS               shift, and go to state 79
    BIGGER_EQ          shift, and go to state 80
    LESS_EQ            shift, and go to state 81
    MOD                shift, and go to state 82
    MULTIPLY           shift, and go to state 83
    DIV                shift, and go to state 84
    PLUS               shift, and go to state 85
    CURLY_END_BRACKET  shift, and go to state 195


State 184

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   73 commaexpr: COMMA expr . $@11 commaexpr

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85

    $default  reduce using rule 72 ($@11)

    $@11  go to state 196


State 185

   78 commaindexedelem: COMMA indexedelem commaindexedelem .

    $default  reduce using rule 78 (commaindexedelem)


State 186

   64 call: START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 197


State 187

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   29     | expr AND $@3 Q expr .
   31     | expr . OR $@4 Q expr

    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85

    $default  reduce using rule 29 (expr)


State 188

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   31     | expr OR $@4 Q expr .

    AND        shift, and go to state 73
    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85

    $default  reduce using rule 31 (expr)


State 189

   68 methodcall: DOUBLE_DOT ID START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 198


State 190

  117 forstmt: forprefix N elist END_PARENTHESIS N . stmt N

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 199
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 191

  116 forprefix: FOR $@23 START_PARENTHESIS elist SEMICOLON M . expr SEMICOLON

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 200
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 192

  101 idlist: ID $@21 . commaid

    COMMA  shift, and go to state 201

    $default  reduce using rule 105 (commaid)

    commaid  go to state 202


State 193

   88 funcdef: FUNCTION $@14 START_PARENTHESIS $@15 idlist END_PARENTHESIS . $@16 block

    $default  reduce using rule 87 ($@16)

    $@16  go to state 203


State 194

   93 funcdef: FUNCTION $@17 ID $@18 START_PARENTHESIS $@19 . idlist END_PARENTHESIS $@20 block

    ID  shift, and go to state 179

    $default  reduce using rule 102 (idlist)

    idlist  go to state 204


State 195

   80 indexedelem: CURLY_START_BRACKET expr COLON expr CURLY_END_BRACKET .

    $default  reduce using rule 80 (indexedelem)


State 196

   73 commaexpr: COMMA expr $@11 . commaexpr

    COMMA  shift, and go to state 161

    $default  reduce using rule 74 (commaexpr)

    commaexpr  go to state 205


State 197

   64 call: START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 64 (call)


State 198

   68 methodcall: DOUBLE_DOT ID START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 68 (methodcall)


State 199

  117 forstmt: forprefix N elist END_PARENTHESIS N stmt . N

    $default  reduce using rule 113 (N)

    N  go to state 206


State 200

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
  116 forprefix: FOR $@23 START_PARENTHESIS elist SEMICOLON M expr . SEMICOLON

    AND        shift, and go to state 73
    OR         shift, and go to state 74
    MINUS      shift, and go to state 75
    EQUAL      shift, and go to state 76
    DIFFER     shift, and go to state 77
    BIGGER     shift, and go to state 78
    LESS       shift, and go to state 79
    BIGGER_EQ  shift, and go to state 80
    LESS_EQ    shift, and go to state 81
    MOD        shift, and go to state 82
    MULTIPLY   shift, and go to state 83
    DIV        shift, and go to state 84
    PLUS       shift, and go to state 85
    SEMICOLON  shift, and go to state 207


State 201

  104 commaid: COMMA . ID $@22 commaid

    ID  shift, and go to state 208


State 202

  101 idlist: ID $@21 commaid .

    $default  reduce using rule 101 (idlist)


State 203

   88 funcdef: FUNCTION $@14 START_PARENTHESIS $@15 idlist END_PARENTHESIS $@16 . block

    CURLY_START_BRACKET  shift, and go to state 20

    block  go to state 209


State 204

   93 funcdef: FUNCTION $@17 ID $@18 START_PARENTHESIS $@19 idlist . END_PARENTHESIS $@20 block

    END_PARENTHESIS  shift, and go to state 210


State 205

   73 commaexpr: COMMA expr $@11 commaexpr .

    $default  reduce using rule 73 (commaexpr)


State 206

  117 forstmt: forprefix N elist END_PARENTHESIS N stmt N .

    $default  reduce using rule 117 (forstmt)


State 207

  116 forprefix: FOR $@23 START_PARENTHESIS elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 116 (forprefix)


State 208

  104 commaid: COMMA ID . $@22 commaid

    $default  reduce using rule 103 ($@22)

    $@22  go to state 211


State 209

   88 funcdef: FUNCTION $@14 START_PARENTHESIS $@15 idlist END_PARENTHESIS $@16 block .

    $default  reduce using rule 88 (funcdef)


State 210

   93 funcdef: FUNCTION $@17 ID $@18 START_PARENTHESIS $@19 idlist END_PARENTHESIS . $@20 block

    $default  reduce using rule 92 ($@20)

    $@20  go to state 212


State 211

  104 commaid: COMMA ID $@22 . commaid

    COMMA  shift, and go to state 201

    $default  reduce using rule 105 (commaid)

    commaid  go to state 213


State 212

   93 funcdef: FUNCTION $@17 ID $@18 START_PARENTHESIS $@19 idlist END_PARENTHESIS $@20 . block

    CURLY_START_BRACKET  shift, and go to state 20

    block  go to state 214


State 213

  104 commaid: COMMA ID $@22 commaid .

    $default  reduce using rule 104 (commaid)


State 214

   93 funcdef: FUNCTION $@17 ID $@18 START_PARENTHESIS $@19 idlist END_PARENTHESIS $@20 block .

    $default  reduce using rule 93 (funcdef)
