Terminals unused in grammar

   BLOCK_COMMENT
   LINE_COMMENT
   ESCAPE_CHARACTERS
   SPACE
   UNDEFINED


State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt stmts
    3      | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt

    9 $@1: %empty

   10 stmt: BREAK $@1 SEMICOLON

   11 $@2: %empty

   12 stmt: CONTINUE $@2 SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON

   16 expr: assignexpr
   17     | expr PLUS expr
   18     | expr MINUS expr
   19     | expr MULTIPLY expr
   20     | expr DIV expr
   21     | expr MOD expr
   22     | expr BIGGER expr
   23     | expr BIGGER_EQ expr
   24     | expr LESS expr
   25     | expr LESS_EQ expr
   26     | expr EQUAL expr
   27     | expr DIFFER expr

   28 $@3: %empty

   29 expr: expr AND $@3 Q expr

   30 $@4: %empty

   31 expr: expr OR $@4 Q expr
   32     | term

   33 Q: %empty

   34 term: START_PARENTHESIS expr END_PARENTHESIS
   35     | primary
   36     | MINUS expr
   37     | PLUSPLUS lvalue

   38 $@5: %empty

   39 term: lvalue $@5 PLUSPLUS
   40     | MINUSMINUS lvalue

   41 $@6: %empty

   42 term: lvalue $@6 MINUSMINUS
   43     | NOT expr

   44 primary: lvalue
   45        | call
   46        | objectdef
   47        | START_PARENTHESIS funcdef END_PARENTHESIS
   48        | const

   49 lvalue: ID
   50       | LOCAL ID
   51       | DOUBLE_COLON ID
   52       | member

   53 $@7: %empty

   54 assignexpr: lvalue $@7 ASSIGN expr
   55           | call ASSIGN expr

   56 $@8: %empty

   57 member: lvalue DOT $@8 ID

   58 $@9: %empty

   59 member: lvalue START_BRACKET $@9 expr END_BRACKET

   60 $@10: %empty

   61 member: call DOT $@10 ID
   62       | call START_BRACKET expr END_BRACKET

   63 call: call START_PARENTHESIS elist END_PARENTHESIS
   64     | lvalue callsuffix
   65     | START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

   66 callsuffix: normcall
   67           | methodcall

   68 $@11: %empty

   69 normcall: START_PARENTHESIS $@11 elist END_PARENTHESIS

   70 methodcall: DOUBLE_DOT ID START_PARENTHESIS elist END_PARENTHESIS

   71 $@12: %empty

   72 elist: expr $@12 commaexpr
   73      | %empty

   74 $@13: %empty

   75 commaexpr: COMMA expr $@13 commaexpr
   76          | %empty

   77 $@14: %empty

   78 objectdef: START_BRACKET $@14 elist END_BRACKET
   79          | START_BRACKET indexed END_BRACKET

   80 indexed: indexedelem commaindexedelem

   81 commaindexedelem: COMMA indexedelem commaindexedelem
   82                 | %empty

   83 indexedelem: CURLY_START_BRACKET expr COLON expr CURLY_END_BRACKET

   84 $@15: %empty

   85 block: CURLY_START_BRACKET $@15 CURLY_END_BRACKET

   86 $@16: %empty

   87 block: CURLY_START_BRACKET $@16 stmt program CURLY_END_BRACKET

   88 $@17: %empty

   89 $@18: %empty

   90 $@19: %empty

   91 funcdef: FUNCTION $@17 START_PARENTHESIS $@18 idlist END_PARENTHESIS $@19 block

   92 $@20: %empty

   93 $@21: %empty

   94 $@22: %empty

   95 $@23: %empty

   96 funcdef: FUNCTION $@20 ID $@21 START_PARENTHESIS $@22 idlist END_PARENTHESIS $@23 block

   97 const: REAL
   98      | INTEGER
   99      | STRING
  100      | NIL
  101      | TRUE
  102      | FALSE

  103 $@24: %empty

  104 idlist: ID $@24 commaid
  105       | %empty

  106 $@25: %empty

  107 commaid: COMMA ID $@25 commaid
  108        | %empty

  109 ifprefix: IF START_PARENTHESIS expr END_PARENTHESIS

  110 ifstmt: ifprefix stmt
  111       | ifprefix stmt elseprefix stmt

  112 elseprefix: ELSE

  113 whilestart: WHILE

  114 whilecond: START_PARENTHESIS expr END_PARENTHESIS

  115 whilestmt: whilestart whilecond stmt

  116 N: %empty

  117 M: %empty

  118 $@26: %empty

  119 forprefix: FOR $@26 START_PARENTHESIS elist SEMICOLON M expr SEMICOLON

  120 forstmt: forprefix N elist END_PARENTHESIS N stmt N

  121 $@27: %empty

  122 returnstmt: RETURN $@27 expr SEMICOLON

  123 $@28: %empty

  124 returnstmt: RETURN $@28 SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ASSIGN (258) 54 55
STRING (259) 99
INTEGER (260) 98
REAL (261) 97
LOCAL (262) 50
NIL (263) 100
ID (264) 49 50 51 57 61 70 96 104 107
BLOCK_COMMENT (265)
LINE_COMMENT (266)
ESCAPE_CHARACTERS (267)
SPACE (268)
IF (269) 109
ELSE (270) 112
WHILE (271) 113
FOR (272) 119
FUNCTION (273) 91 96
RETURN (274) 122 124
BREAK (275) 10
CONTINUE (276) 12
AND (277) 29
NOT (278) 43
OR (279) 31
TRUE (280) 101
FALSE (281) 102
MINUS (282) 18 36
EQUAL (283) 26
DIFFER (284) 27
BIGGER (285) 22
LESS (286) 24
BIGGER_EQ (287) 23
LESS_EQ (288) 25
MINUSMINUS (289) 40 42
PLUSPLUS (290) 37 39
MOD (291) 21
MULTIPLY (292) 19
DIV (293) 20
PLUS (294) 17
CURLY_START_BRACKET (295) 83 85 87
CURLY_END_BRACKET (296) 83 85 87
START_BRACKET (297) 59 62 78 79
END_BRACKET (298) 59 62 78 79
START_PARENTHESIS (299) 34 47 63 65 69 70 91 96 109 114 119
END_PARENTHESIS (300) 34 47 63 65 69 70 91 96 109 114 120
SEMICOLON (301) 4 10 12 15 119 122 124
COMMA (302) 75 81 107
COLON (303) 83
DOUBLE_COLON (304) 51
DOT (305) 57 61
DOUBLE_DOT (306) 70
UNDEFINED (307)
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0 87
stmts (56)
    on left: 2 3, on right: 1 2
stmt (57)
    on left: 4 5 6 7 8 10 12 13 14 15, on right: 2 87 110 111 115 120
$@1 (58)
    on left: 9, on right: 10
$@2 (59)
    on left: 11, on right: 12
expr (60)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 29 31 32, on right:
    4 17 18 19 20 21 22 23 24 25 26 27 29 31 34 36 43 54 55 59 62 72
    75 83 109 114 119 122
$@3 (61)
    on left: 28, on right: 29
$@4 (62)
    on left: 30, on right: 31
Q (63)
    on left: 33, on right: 29 31
term (64)
    on left: 34 35 36 37 39 40 42 43, on right: 32
$@5 (65)
    on left: 38, on right: 39
$@6 (66)
    on left: 41, on right: 42
primary (67)
    on left: 44 45 46 47 48, on right: 35
lvalue (68)
    on left: 49 50 51 52, on right: 37 39 40 42 44 54 57 59 64
assignexpr (69)
    on left: 54 55, on right: 16
$@7 (70)
    on left: 53, on right: 54
member (71)
    on left: 57 59 61 62, on right: 52
$@8 (72)
    on left: 56, on right: 57
$@9 (73)
    on left: 58, on right: 59
$@10 (74)
    on left: 60, on right: 61
call (75)
    on left: 63 64 65, on right: 45 55 61 62 63
callsuffix (76)
    on left: 66 67, on right: 64
normcall (77)
    on left: 69, on right: 66
$@11 (78)
    on left: 68, on right: 69
methodcall (79)
    on left: 70, on right: 67
elist (80)
    on left: 72 73, on right: 63 65 69 70 78 119 120
$@12 (81)
    on left: 71, on right: 72
commaexpr (82)
    on left: 75 76, on right: 72 75
$@13 (83)
    on left: 74, on right: 75
objectdef (84)
    on left: 78 79, on right: 46
$@14 (85)
    on left: 77, on right: 78
indexed (86)
    on left: 80, on right: 79
commaindexedelem (87)
    on left: 81 82, on right: 80 81
indexedelem (88)
    on left: 83, on right: 80 81
block (89)
    on left: 85 87, on right: 13 91 96
$@15 (90)
    on left: 84, on right: 85
$@16 (91)
    on left: 86, on right: 87
funcdef (92)
    on left: 91 96, on right: 14 47 65
$@17 (93)
    on left: 88, on right: 91
$@18 (94)
    on left: 89, on right: 91
$@19 (95)
    on left: 90, on right: 91
$@20 (96)
    on left: 92, on right: 96
$@21 (97)
    on left: 93, on right: 96
$@22 (98)
    on left: 94, on right: 96
$@23 (99)
    on left: 95, on right: 96
const (100)
    on left: 97 98 99 100 101 102, on right: 48
idlist (101)
    on left: 104 105, on right: 91 96
$@24 (102)
    on left: 103, on right: 104
commaid (103)
    on left: 107 108, on right: 104 107
$@25 (104)
    on left: 106, on right: 107
ifprefix (105)
    on left: 109, on right: 110 111
ifstmt (106)
    on left: 110 111, on right: 5
elseprefix (107)
    on left: 112, on right: 111
whilestart (108)
    on left: 113, on right: 115
whilecond (109)
    on left: 114, on right: 115
whilestmt (110)
    on left: 115, on right: 6
N (111)
    on left: 116, on right: 120
M (112)
    on left: 117, on right: 119
forprefix (113)
    on left: 119, on right: 120
$@26 (114)
    on left: 118, on right: 119
forstmt (115)
    on left: 120, on right: 7
returnstmt (116)
    on left: 122 124, on right: 8
$@27 (117)
    on left: 121, on right: 122
$@28 (118)
    on left: 123, on right: 124


State 0

    0 $accept: . program $end

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 1

   99 const: STRING .

    $default  reduce using rule 99 (const)


State 2

   98 const: INTEGER .

    $default  reduce using rule 98 (const)


State 3

   97 const: REAL .

    $default  reduce using rule 97 (const)


State 4

   50 lvalue: LOCAL . ID

    ID  shift, and go to state 46


State 5

  100 const: NIL .

    $default  reduce using rule 100 (const)


State 6

   49 lvalue: ID .

    $default  reduce using rule 49 (lvalue)


State 7

  109 ifprefix: IF . START_PARENTHESIS expr END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 47


State 8

  113 whilestart: WHILE .

    $default  reduce using rule 113 (whilestart)


State 9

  119 forprefix: FOR . $@26 START_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    $default  reduce using rule 118 ($@26)

    $@26  go to state 48


State 10

   91 funcdef: FUNCTION . $@17 START_PARENTHESIS $@18 idlist END_PARENTHESIS $@19 block
   96        | FUNCTION . $@20 ID $@21 START_PARENTHESIS $@22 idlist END_PARENTHESIS $@23 block

    ID        reduce using rule 92 ($@20)
    $default  reduce using rule 88 ($@17)

    $@17  go to state 49
    $@20  go to state 50


State 11

  122 returnstmt: RETURN . $@27 expr SEMICOLON
  124           | RETURN . $@28 SEMICOLON

    SEMICOLON  reduce using rule 123 ($@28)
    $default   reduce using rule 121 ($@27)

    $@27  go to state 51
    $@28  go to state 52


State 12

   10 stmt: BREAK . $@1 SEMICOLON

    $default  reduce using rule 9 ($@1)

    $@1  go to state 53


State 13

   12 stmt: CONTINUE . $@2 SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 54


State 14

   43 term: NOT . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 55
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 15

  101 const: TRUE .

    $default  reduce using rule 101 (const)


State 16

  102 const: FALSE .

    $default  reduce using rule 102 (const)


State 17

   36 term: MINUS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 56
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 18

   40 term: MINUSMINUS . lvalue

    LOCAL              shift, and go to state 4
    ID                 shift, and go to state 6
    START_PARENTHESIS  shift, and go to state 57
    DOUBLE_COLON       shift, and go to state 24

    lvalue  go to state 58
    member  go to state 33
    call    go to state 59


State 19

   37 term: PLUSPLUS . lvalue

    LOCAL              shift, and go to state 4
    ID                 shift, and go to state 6
    START_PARENTHESIS  shift, and go to state 57
    DOUBLE_COLON       shift, and go to state 24

    lvalue  go to state 60
    member  go to state 33
    call    go to state 59


State 20

   85 block: CURLY_START_BRACKET . $@15 CURLY_END_BRACKET
   87      | CURLY_START_BRACKET . $@16 stmt program CURLY_END_BRACKET

    CURLY_END_BRACKET  reduce using rule 84 ($@15)
    $default           reduce using rule 86 ($@16)

    $@15  go to state 61
    $@16  go to state 62


State 21

   78 objectdef: START_BRACKET . $@14 elist END_BRACKET
   79          | START_BRACKET . indexed END_BRACKET

    CURLY_START_BRACKET  shift, and go to state 63

    $default  reduce using rule 77 ($@14)

    $@14         go to state 64
    indexed      go to state 65
    indexedelem  go to state 66


State 22

   34 term: START_PARENTHESIS . expr END_PARENTHESIS
   47 primary: START_PARENTHESIS . funcdef END_PARENTHESIS
   65 call: START_PARENTHESIS . funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    FUNCTION           shift, and go to state 10
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 67
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 68
    const       go to state 38


State 23

   15 stmt: SEMICOLON .

    $default  reduce using rule 15 (stmt)


State 24

   51 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 69


State 25

    0 $accept: program . $end

    $end  shift, and go to state 70


State 26

    1 program: stmts .

    $default  reduce using rule 1 (program)


State 27

    2 stmts: stmt . stmts

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    stmts       go to state 71
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 28

    4 stmt: expr . SEMICOLON
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84
    SEMICOLON  shift, and go to state 85


State 29

   32 expr: term .

    $default  reduce using rule 32 (expr)


State 30

   35 term: primary .

    $default  reduce using rule 35 (term)


State 31

   39 term: lvalue . $@5 PLUSPLUS
   42     | lvalue . $@6 MINUSMINUS
   44 primary: lvalue .
   54 assignexpr: lvalue . $@7 ASSIGN expr
   57 member: lvalue . DOT $@8 ID
   59       | lvalue . START_BRACKET $@9 expr END_BRACKET
   64 call: lvalue . callsuffix

    START_BRACKET      shift, and go to state 86
    START_PARENTHESIS  shift, and go to state 87
    DOT                shift, and go to state 88
    DOUBLE_DOT         shift, and go to state 89

    ASSIGN      reduce using rule 53 ($@7)
    MINUSMINUS  reduce using rule 41 ($@6)
    PLUSPLUS    reduce using rule 38 ($@5)
    $default    reduce using rule 44 (primary)

    $@5         go to state 90
    $@6         go to state 91
    $@7         go to state 92
    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 32

   16 expr: assignexpr .

    $default  reduce using rule 16 (expr)


State 33

   52 lvalue: member .

    $default  reduce using rule 52 (lvalue)


State 34

   45 primary: call .
   55 assignexpr: call . ASSIGN expr
   61 member: call . DOT $@10 ID
   62       | call . START_BRACKET expr END_BRACKET
   63 call: call . START_PARENTHESIS elist END_PARENTHESIS

    ASSIGN             shift, and go to state 96
    START_BRACKET      shift, and go to state 97
    START_PARENTHESIS  shift, and go to state 98
    DOT                shift, and go to state 99

    $default  reduce using rule 45 (primary)


State 35

   46 primary: objectdef .

    $default  reduce using rule 46 (primary)


State 36

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


State 37

   14 stmt: funcdef .

    $default  reduce using rule 14 (stmt)


State 38

   48 primary: const .

    $default  reduce using rule 48 (primary)


State 39

  110 ifstmt: ifprefix . stmt
  111       | ifprefix . stmt elseprefix stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 100
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 40

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 41

  115 whilestmt: whilestart . whilecond stmt

    START_PARENTHESIS  shift, and go to state 101

    whilecond  go to state 102


State 42

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 43

  120 forstmt: forprefix . N elist END_PARENTHESIS N stmt N

    $default  reduce using rule 116 (N)

    N  go to state 103


State 44

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 45

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 46

   50 lvalue: LOCAL ID .

    $default  reduce using rule 50 (lvalue)


State 47

  109 ifprefix: IF START_PARENTHESIS . expr END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 104
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 48

  119 forprefix: FOR $@26 . START_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    START_PARENTHESIS  shift, and go to state 105


State 49

   91 funcdef: FUNCTION $@17 . START_PARENTHESIS $@18 idlist END_PARENTHESIS $@19 block

    START_PARENTHESIS  shift, and go to state 106


State 50

   96 funcdef: FUNCTION $@20 . ID $@21 START_PARENTHESIS $@22 idlist END_PARENTHESIS $@23 block

    ID  shift, and go to state 107


State 51

  122 returnstmt: RETURN $@27 . expr SEMICOLON

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 108
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 52

  124 returnstmt: RETURN $@28 . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 53

   10 stmt: BREAK $@1 . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 54

   12 stmt: CONTINUE $@2 . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 55

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   43 term: NOT expr .

    $default  reduce using rule 43 (term)


State 56

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   36 term: MINUS expr .

    $default  reduce using rule 36 (term)


State 57

   65 call: START_PARENTHESIS . funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    FUNCTION  shift, and go to state 10

    funcdef  go to state 112


State 58

   40 term: MINUSMINUS lvalue .
   57 member: lvalue . DOT $@8 ID
   59       | lvalue . START_BRACKET $@9 expr END_BRACKET
   64 call: lvalue . callsuffix

    START_BRACKET      shift, and go to state 86
    START_PARENTHESIS  shift, and go to state 87
    DOT                shift, and go to state 88
    DOUBLE_DOT         shift, and go to state 89

    $default  reduce using rule 40 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 59

   61 member: call . DOT $@10 ID
   62       | call . START_BRACKET expr END_BRACKET
   63 call: call . START_PARENTHESIS elist END_PARENTHESIS

    START_BRACKET      shift, and go to state 97
    START_PARENTHESIS  shift, and go to state 98
    DOT                shift, and go to state 99


State 60

   37 term: PLUSPLUS lvalue .
   57 member: lvalue . DOT $@8 ID
   59       | lvalue . START_BRACKET $@9 expr END_BRACKET
   64 call: lvalue . callsuffix

    START_BRACKET      shift, and go to state 86
    START_PARENTHESIS  shift, and go to state 87
    DOT                shift, and go to state 88
    DOUBLE_DOT         shift, and go to state 89

    $default  reduce using rule 37 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 61

   85 block: CURLY_START_BRACKET $@15 . CURLY_END_BRACKET

    CURLY_END_BRACKET  shift, and go to state 113


State 62

   87 block: CURLY_START_BRACKET $@16 . stmt program CURLY_END_BRACKET

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 114
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 63

   83 indexedelem: CURLY_START_BRACKET . expr COLON expr CURLY_END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 115
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 64

   78 objectdef: START_BRACKET $@14 . elist END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 73 (elist)

    expr        go to state 116
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 117
    objectdef   go to state 35
    const       go to state 38


State 65

   79 objectdef: START_BRACKET indexed . END_BRACKET

    END_BRACKET  shift, and go to state 118


State 66

   80 indexed: indexedelem . commaindexedelem

    COMMA  shift, and go to state 119

    $default  reduce using rule 82 (commaindexedelem)

    commaindexedelem  go to state 120


State 67

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   34 term: START_PARENTHESIS expr . END_PARENTHESIS

    AND              shift, and go to state 72
    OR               shift, and go to state 73
    MINUS            shift, and go to state 74
    EQUAL            shift, and go to state 75
    DIFFER           shift, and go to state 76
    BIGGER           shift, and go to state 77
    LESS             shift, and go to state 78
    BIGGER_EQ        shift, and go to state 79
    LESS_EQ          shift, and go to state 80
    MOD              shift, and go to state 81
    MULTIPLY         shift, and go to state 82
    DIV              shift, and go to state 83
    PLUS             shift, and go to state 84
    END_PARENTHESIS  shift, and go to state 121


State 68

   47 primary: START_PARENTHESIS funcdef . END_PARENTHESIS
   65 call: START_PARENTHESIS funcdef . END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 122


State 69

   51 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 51 (lvalue)


State 70

    0 $accept: program $end .

    $default  accept


State 71

    2 stmts: stmt stmts .

    $default  reduce using rule 2 (stmts)


State 72

   29 expr: expr AND . $@3 Q expr

    $default  reduce using rule 28 ($@3)

    $@3  go to state 123


State 73

   31 expr: expr OR . $@4 Q expr

    $default  reduce using rule 30 ($@4)

    $@4  go to state 124


State 74

   18 expr: expr MINUS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   26 expr: expr EQUAL . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   27 expr: expr DIFFER . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   22 expr: expr BIGGER . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   24 expr: expr LESS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   23 expr: expr BIGGER_EQ . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 130
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   25 expr: expr LESS_EQ . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 131
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

   21 expr: expr MOD . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 82

   19 expr: expr MULTIPLY . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 133
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 83

   20 expr: expr DIV . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 134
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 84

   17 expr: expr PLUS . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 135
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 85

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 86

   59 member: lvalue START_BRACKET . $@9 expr END_BRACKET

    $default  reduce using rule 58 ($@9)

    $@9  go to state 136


State 87

   69 normcall: START_PARENTHESIS . $@11 elist END_PARENTHESIS

    $default  reduce using rule 68 ($@11)

    $@11  go to state 137


State 88

   57 member: lvalue DOT . $@8 ID

    $default  reduce using rule 56 ($@8)

    $@8  go to state 138


State 89

   70 methodcall: DOUBLE_DOT . ID START_PARENTHESIS elist END_PARENTHESIS

    ID  shift, and go to state 139


State 90

   39 term: lvalue $@5 . PLUSPLUS

    PLUSPLUS  shift, and go to state 140


State 91

   42 term: lvalue $@6 . MINUSMINUS

    MINUSMINUS  shift, and go to state 141


State 92

   54 assignexpr: lvalue $@7 . ASSIGN expr

    ASSIGN  shift, and go to state 142


State 93

   64 call: lvalue callsuffix .

    $default  reduce using rule 64 (call)


State 94

   66 callsuffix: normcall .

    $default  reduce using rule 66 (callsuffix)


State 95

   67 callsuffix: methodcall .

    $default  reduce using rule 67 (callsuffix)


State 96

   55 assignexpr: call ASSIGN . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 143
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 97

   62 member: call START_BRACKET . expr END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 144
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 98

   63 call: call START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 73 (elist)

    expr        go to state 116
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 145
    objectdef   go to state 35
    const       go to state 38


State 99

   61 member: call DOT . $@10 ID

    $default  reduce using rule 60 ($@10)

    $@10  go to state 146


State 100

  110 ifstmt: ifprefix stmt .
  111       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 147

    ELSE      [reduce using rule 110 (ifstmt)]
    $default  reduce using rule 110 (ifstmt)

    elseprefix  go to state 148


State 101

  114 whilecond: START_PARENTHESIS . expr END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 149
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 102

  115 whilestmt: whilestart whilecond . stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 150
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 103

  120 forstmt: forprefix N . elist END_PARENTHESIS N stmt N

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 73 (elist)

    expr        go to state 116
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 151
    objectdef   go to state 35
    const       go to state 38


State 104

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
  109 ifprefix: IF START_PARENTHESIS expr . END_PARENTHESIS

    AND              shift, and go to state 72
    OR               shift, and go to state 73
    MINUS            shift, and go to state 74
    EQUAL            shift, and go to state 75
    DIFFER           shift, and go to state 76
    BIGGER           shift, and go to state 77
    LESS             shift, and go to state 78
    BIGGER_EQ        shift, and go to state 79
    LESS_EQ          shift, and go to state 80
    MOD              shift, and go to state 81
    MULTIPLY         shift, and go to state 82
    DIV              shift, and go to state 83
    PLUS             shift, and go to state 84
    END_PARENTHESIS  shift, and go to state 152


State 105

  119 forprefix: FOR $@26 START_PARENTHESIS . elist SEMICOLON M expr SEMICOLON

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 73 (elist)

    expr        go to state 116
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 153
    objectdef   go to state 35
    const       go to state 38


State 106

   91 funcdef: FUNCTION $@17 START_PARENTHESIS . $@18 idlist END_PARENTHESIS $@19 block

    $default  reduce using rule 89 ($@18)

    $@18  go to state 154


State 107

   96 funcdef: FUNCTION $@20 ID . $@21 START_PARENTHESIS $@22 idlist END_PARENTHESIS $@23 block

    $default  reduce using rule 93 ($@21)

    $@21  go to state 155


State 108

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
  122 returnstmt: RETURN $@27 expr . SEMICOLON

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84
    SEMICOLON  shift, and go to state 156


State 109

  124 returnstmt: RETURN $@28 SEMICOLON .

    $default  reduce using rule 124 (returnstmt)


State 110

   10 stmt: BREAK $@1 SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 111

   12 stmt: CONTINUE $@2 SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 112

   65 call: START_PARENTHESIS funcdef . END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 157


State 113

   85 block: CURLY_START_BRACKET $@15 CURLY_END_BRACKET .

    $default  reduce using rule 85 (block)


State 114

   87 block: CURLY_START_BRACKET $@16 stmt . program CURLY_END_BRACKET

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    $default  reduce using rule 3 (stmts)

    program     go to state 158
    stmts       go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 115

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   83 indexedelem: CURLY_START_BRACKET expr . COLON expr CURLY_END_BRACKET

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84
    COLON      shift, and go to state 159


State 116

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   72 elist: expr . $@12 commaexpr

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84

    $default  reduce using rule 71 ($@12)

    $@12  go to state 160


State 117

   78 objectdef: START_BRACKET $@14 elist . END_BRACKET

    END_BRACKET  shift, and go to state 161


State 118

   79 objectdef: START_BRACKET indexed END_BRACKET .

    $default  reduce using rule 79 (objectdef)


State 119

   81 commaindexedelem: COMMA . indexedelem commaindexedelem

    CURLY_START_BRACKET  shift, and go to state 63

    indexedelem  go to state 162


State 120

   80 indexed: indexedelem commaindexedelem .

    $default  reduce using rule 80 (indexed)


State 121

   34 term: START_PARENTHESIS expr END_PARENTHESIS .

    $default  reduce using rule 34 (term)


State 122

   47 primary: START_PARENTHESIS funcdef END_PARENTHESIS .
   65 call: START_PARENTHESIS funcdef END_PARENTHESIS . START_PARENTHESIS elist END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 163

    $default  reduce using rule 47 (primary)


State 123

   29 expr: expr AND $@3 . Q expr

    $default  reduce using rule 33 (Q)

    Q  go to state 164


State 124

   31 expr: expr OR $@4 . Q expr

    $default  reduce using rule 33 (Q)

    Q  go to state 165


State 125

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   18     | expr MINUS expr .
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MOD       shift, and go to state 81
    MULTIPLY  shift, and go to state 82
    DIV       shift, and go to state 83

    $default  reduce using rule 18 (expr)


State 126

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   26     | expr EQUAL expr .
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS      shift, and go to state 74
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84

    EQUAL   error (nonassociative)
    DIFFER  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 127

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   27     | expr DIFFER expr .
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS      shift, and go to state 74
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84

    EQUAL   error (nonassociative)
    DIFFER  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 128

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   22     | expr BIGGER expr .
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS     shift, and go to state 74
    MOD       shift, and go to state 81
    MULTIPLY  shift, and go to state 82
    DIV       shift, and go to state 83
    PLUS      shift, and go to state 84

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 22 (expr)


State 129

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   24     | expr LESS expr .
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS     shift, and go to state 74
    MOD       shift, and go to state 81
    MULTIPLY  shift, and go to state 82
    DIV       shift, and go to state 83
    PLUS      shift, and go to state 84

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 24 (expr)


State 130

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   23     | expr BIGGER_EQ expr .
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS     shift, and go to state 74
    MOD       shift, and go to state 81
    MULTIPLY  shift, and go to state 82
    DIV       shift, and go to state 83
    PLUS      shift, and go to state 84

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 23 (expr)


State 131

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   25     | expr LESS_EQ expr .
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MINUS     shift, and go to state 74
    MOD       shift, and go to state 81
    MULTIPLY  shift, and go to state 82
    DIV       shift, and go to state 83
    PLUS      shift, and go to state 84

    BIGGER     error (nonassociative)
    LESS       error (nonassociative)
    BIGGER_EQ  error (nonassociative)
    LESS_EQ    error (nonassociative)

    $default  reduce using rule 25 (expr)


State 132

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   21     | expr MOD expr .
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    $default  reduce using rule 21 (expr)


State 133

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   19     | expr MULTIPLY expr .
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    $default  reduce using rule 19 (expr)


State 134

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   20     | expr DIV expr .
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    $default  reduce using rule 20 (expr)


State 135

   17 expr: expr . PLUS expr
   17     | expr PLUS expr .
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr

    MOD       shift, and go to state 81
    MULTIPLY  shift, and go to state 82
    DIV       shift, and go to state 83

    $default  reduce using rule 17 (expr)


State 136

   59 member: lvalue START_BRACKET $@9 . expr END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 166
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 137

   69 normcall: START_PARENTHESIS $@11 . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 73 (elist)

    expr        go to state 116
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 167
    objectdef   go to state 35
    const       go to state 38


State 138

   57 member: lvalue DOT $@8 . ID

    ID  shift, and go to state 168


State 139

   70 methodcall: DOUBLE_DOT ID . START_PARENTHESIS elist END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 169


State 140

   39 term: lvalue $@5 PLUSPLUS .

    $default  reduce using rule 39 (term)


State 141

   42 term: lvalue $@6 MINUSMINUS .

    $default  reduce using rule 42 (term)


State 142

   54 assignexpr: lvalue $@7 ASSIGN . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 170
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 143

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   55 assignexpr: call ASSIGN expr .

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84

    $default  reduce using rule 55 (assignexpr)


State 144

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   62 member: call START_BRACKET expr . END_BRACKET

    AND          shift, and go to state 72
    OR           shift, and go to state 73
    MINUS        shift, and go to state 74
    EQUAL        shift, and go to state 75
    DIFFER       shift, and go to state 76
    BIGGER       shift, and go to state 77
    LESS         shift, and go to state 78
    BIGGER_EQ    shift, and go to state 79
    LESS_EQ      shift, and go to state 80
    MOD          shift, and go to state 81
    MULTIPLY     shift, and go to state 82
    DIV          shift, and go to state 83
    PLUS         shift, and go to state 84
    END_BRACKET  shift, and go to state 171


State 145

   63 call: call START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 172


State 146

   61 member: call DOT $@10 . ID

    ID  shift, and go to state 173


State 147

  112 elseprefix: ELSE .

    $default  reduce using rule 112 (elseprefix)


State 148

  111 ifstmt: ifprefix stmt elseprefix . stmt

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 174
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 149

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
  114 whilecond: START_PARENTHESIS expr . END_PARENTHESIS

    AND              shift, and go to state 72
    OR               shift, and go to state 73
    MINUS            shift, and go to state 74
    EQUAL            shift, and go to state 75
    DIFFER           shift, and go to state 76
    BIGGER           shift, and go to state 77
    LESS             shift, and go to state 78
    BIGGER_EQ        shift, and go to state 79
    LESS_EQ          shift, and go to state 80
    MOD              shift, and go to state 81
    MULTIPLY         shift, and go to state 82
    DIV              shift, and go to state 83
    PLUS             shift, and go to state 84
    END_PARENTHESIS  shift, and go to state 175


State 150

  115 whilestmt: whilestart whilecond stmt .

    $default  reduce using rule 115 (whilestmt)


State 151

  120 forstmt: forprefix N elist . END_PARENTHESIS N stmt N

    END_PARENTHESIS  shift, and go to state 176


State 152

  109 ifprefix: IF START_PARENTHESIS expr END_PARENTHESIS .

    $default  reduce using rule 109 (ifprefix)


State 153

  119 forprefix: FOR $@26 START_PARENTHESIS elist . SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 177


State 154

   91 funcdef: FUNCTION $@17 START_PARENTHESIS $@18 . idlist END_PARENTHESIS $@19 block

    ID  shift, and go to state 178

    $default  reduce using rule 105 (idlist)

    idlist  go to state 179


State 155

   96 funcdef: FUNCTION $@20 ID $@21 . START_PARENTHESIS $@22 idlist END_PARENTHESIS $@23 block

    START_PARENTHESIS  shift, and go to state 180


State 156

  122 returnstmt: RETURN $@27 expr SEMICOLON .

    $default  reduce using rule 122 (returnstmt)


State 157

   65 call: START_PARENTHESIS funcdef END_PARENTHESIS . START_PARENTHESIS elist END_PARENTHESIS

    START_PARENTHESIS  shift, and go to state 163


State 158

   87 block: CURLY_START_BRACKET $@16 stmt program . CURLY_END_BRACKET

    CURLY_END_BRACKET  shift, and go to state 181


State 159

   83 indexedelem: CURLY_START_BRACKET expr COLON . expr CURLY_END_BRACKET

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 182
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 160

   72 elist: expr $@12 . commaexpr

    COMMA  shift, and go to state 183

    $default  reduce using rule 76 (commaexpr)

    commaexpr  go to state 184


State 161

   78 objectdef: START_BRACKET $@14 elist END_BRACKET .

    $default  reduce using rule 78 (objectdef)


State 162

   81 commaindexedelem: COMMA indexedelem . commaindexedelem

    COMMA  shift, and go to state 119

    $default  reduce using rule 82 (commaindexedelem)

    commaindexedelem  go to state 185


State 163

   65 call: START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 73 (elist)

    expr        go to state 116
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 186
    objectdef   go to state 35
    const       go to state 38


State 164

   29 expr: expr AND $@3 Q . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 187
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 165

   31 expr: expr OR $@4 Q . expr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 188
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 166

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   59 member: lvalue START_BRACKET $@9 expr . END_BRACKET

    AND          shift, and go to state 72
    OR           shift, and go to state 73
    MINUS        shift, and go to state 74
    EQUAL        shift, and go to state 75
    DIFFER       shift, and go to state 76
    BIGGER       shift, and go to state 77
    LESS         shift, and go to state 78
    BIGGER_EQ    shift, and go to state 79
    LESS_EQ      shift, and go to state 80
    MOD          shift, and go to state 81
    MULTIPLY     shift, and go to state 82
    DIV          shift, and go to state 83
    PLUS         shift, and go to state 84
    END_BRACKET  shift, and go to state 189


State 167

   69 normcall: START_PARENTHESIS $@11 elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 190


State 168

   57 member: lvalue DOT $@8 ID .

    $default  reduce using rule 57 (member)


State 169

   70 methodcall: DOUBLE_DOT ID START_PARENTHESIS . elist END_PARENTHESIS

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    $default  reduce using rule 73 (elist)

    expr        go to state 116
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 191
    objectdef   go to state 35
    const       go to state 38


State 170

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   54 assignexpr: lvalue $@7 ASSIGN expr .

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84

    $default  reduce using rule 54 (assignexpr)


State 171

   62 member: call START_BRACKET expr END_BRACKET .

    $default  reduce using rule 62 (member)


State 172

   63 call: call START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 63 (call)


State 173

   61 member: call DOT $@10 ID .

    $default  reduce using rule 61 (member)


State 174

  111 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 111 (ifstmt)


State 175

  114 whilecond: START_PARENTHESIS expr END_PARENTHESIS .

    $default  reduce using rule 114 (whilecond)


State 176

  120 forstmt: forprefix N elist END_PARENTHESIS . N stmt N

    $default  reduce using rule 116 (N)

    N  go to state 192


State 177

  119 forprefix: FOR $@26 START_PARENTHESIS elist SEMICOLON . M expr SEMICOLON

    $default  reduce using rule 117 (M)

    M  go to state 193


State 178

  104 idlist: ID . $@24 commaid

    $default  reduce using rule 103 ($@24)

    $@24  go to state 194


State 179

   91 funcdef: FUNCTION $@17 START_PARENTHESIS $@18 idlist . END_PARENTHESIS $@19 block

    END_PARENTHESIS  shift, and go to state 195


State 180

   96 funcdef: FUNCTION $@20 ID $@21 START_PARENTHESIS . $@22 idlist END_PARENTHESIS $@23 block

    $default  reduce using rule 94 ($@22)

    $@22  go to state 196


State 181

   87 block: CURLY_START_BRACKET $@16 stmt program CURLY_END_BRACKET .

    $default  reduce using rule 87 (block)


State 182

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   83 indexedelem: CURLY_START_BRACKET expr COLON expr . CURLY_END_BRACKET

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    MINUS              shift, and go to state 74
    EQUAL              shift, and go to state 75
    DIFFER             shift, and go to state 76
    BIGGER             shift, and go to state 77
    LESS               shift, and go to state 78
    BIGGER_EQ          shift, and go to state 79
    LESS_EQ            shift, and go to state 80
    MOD                shift, and go to state 81
    MULTIPLY           shift, and go to state 82
    DIV                shift, and go to state 83
    PLUS               shift, and go to state 84
    CURLY_END_BRACKET  shift, and go to state 197


State 183

   75 commaexpr: COMMA . expr $@13 commaexpr

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 198
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 184

   72 elist: expr $@12 commaexpr .

    $default  reduce using rule 72 (elist)


State 185

   81 commaindexedelem: COMMA indexedelem commaindexedelem .

    $default  reduce using rule 81 (commaindexedelem)


State 186

   65 call: START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 199


State 187

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   29     | expr AND $@3 Q expr .
   31     | expr . OR $@4 Q expr

    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84

    $default  reduce using rule 29 (expr)


State 188

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   31     | expr OR $@4 Q expr .

    AND        shift, and go to state 72
    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84

    $default  reduce using rule 31 (expr)


State 189

   59 member: lvalue START_BRACKET $@9 expr END_BRACKET .

    $default  reduce using rule 59 (member)


State 190

   69 normcall: START_PARENTHESIS $@11 elist END_PARENTHESIS .

    $default  reduce using rule 69 (normcall)


State 191

   70 methodcall: DOUBLE_DOT ID START_PARENTHESIS elist . END_PARENTHESIS

    END_PARENTHESIS  shift, and go to state 200


State 192

  120 forstmt: forprefix N elist END_PARENTHESIS N . stmt N

    STRING               shift, and go to state 1
    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    LOCAL                shift, and go to state 4
    NIL                  shift, and go to state 5
    ID                   shift, and go to state 6
    IF                   shift, and go to state 7
    WHILE                shift, and go to state 8
    FOR                  shift, and go to state 9
    FUNCTION             shift, and go to state 10
    RETURN               shift, and go to state 11
    BREAK                shift, and go to state 12
    CONTINUE             shift, and go to state 13
    NOT                  shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    MINUS                shift, and go to state 17
    MINUSMINUS           shift, and go to state 18
    PLUSPLUS             shift, and go to state 19
    CURLY_START_BRACKET  shift, and go to state 20
    START_BRACKET        shift, and go to state 21
    START_PARENTHESIS    shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLON         shift, and go to state 24

    stmt        go to state 201
    expr        go to state 28
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 193

  119 forprefix: FOR $@26 START_PARENTHESIS elist SEMICOLON M . expr SEMICOLON

    STRING             shift, and go to state 1
    INTEGER            shift, and go to state 2
    REAL               shift, and go to state 3
    LOCAL              shift, and go to state 4
    NIL                shift, and go to state 5
    ID                 shift, and go to state 6
    NOT                shift, and go to state 14
    TRUE               shift, and go to state 15
    FALSE              shift, and go to state 16
    MINUS              shift, and go to state 17
    MINUSMINUS         shift, and go to state 18
    PLUSPLUS           shift, and go to state 19
    START_BRACKET      shift, and go to state 21
    START_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON       shift, and go to state 24

    expr        go to state 202
    term        go to state 29
    primary     go to state 30
    lvalue      go to state 31
    assignexpr  go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 194

  104 idlist: ID $@24 . commaid

    COMMA  shift, and go to state 203

    $default  reduce using rule 108 (commaid)

    commaid  go to state 204


State 195

   91 funcdef: FUNCTION $@17 START_PARENTHESIS $@18 idlist END_PARENTHESIS . $@19 block

    $default  reduce using rule 90 ($@19)

    $@19  go to state 205


State 196

   96 funcdef: FUNCTION $@20 ID $@21 START_PARENTHESIS $@22 . idlist END_PARENTHESIS $@23 block

    ID  shift, and go to state 178

    $default  reduce using rule 105 (idlist)

    idlist  go to state 206


State 197

   83 indexedelem: CURLY_START_BRACKET expr COLON expr CURLY_END_BRACKET .

    $default  reduce using rule 83 (indexedelem)


State 198

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
   75 commaexpr: COMMA expr . $@13 commaexpr

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84

    $default  reduce using rule 74 ($@13)

    $@13  go to state 207


State 199

   65 call: START_PARENTHESIS funcdef END_PARENTHESIS START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 65 (call)


State 200

   70 methodcall: DOUBLE_DOT ID START_PARENTHESIS elist END_PARENTHESIS .

    $default  reduce using rule 70 (methodcall)


State 201

  120 forstmt: forprefix N elist END_PARENTHESIS N stmt . N

    $default  reduce using rule 116 (N)

    N  go to state 208


State 202

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MULTIPLY expr
   20     | expr . DIV expr
   21     | expr . MOD expr
   22     | expr . BIGGER expr
   23     | expr . BIGGER_EQ expr
   24     | expr . LESS expr
   25     | expr . LESS_EQ expr
   26     | expr . EQUAL expr
   27     | expr . DIFFER expr
   29     | expr . AND $@3 Q expr
   31     | expr . OR $@4 Q expr
  119 forprefix: FOR $@26 START_PARENTHESIS elist SEMICOLON M expr . SEMICOLON

    AND        shift, and go to state 72
    OR         shift, and go to state 73
    MINUS      shift, and go to state 74
    EQUAL      shift, and go to state 75
    DIFFER     shift, and go to state 76
    BIGGER     shift, and go to state 77
    LESS       shift, and go to state 78
    BIGGER_EQ  shift, and go to state 79
    LESS_EQ    shift, and go to state 80
    MOD        shift, and go to state 81
    MULTIPLY   shift, and go to state 82
    DIV        shift, and go to state 83
    PLUS       shift, and go to state 84
    SEMICOLON  shift, and go to state 209


State 203

  107 commaid: COMMA . ID $@25 commaid

    ID  shift, and go to state 210


State 204

  104 idlist: ID $@24 commaid .

    $default  reduce using rule 104 (idlist)


State 205

   91 funcdef: FUNCTION $@17 START_PARENTHESIS $@18 idlist END_PARENTHESIS $@19 . block

    CURLY_START_BRACKET  shift, and go to state 20

    block  go to state 211


State 206

   96 funcdef: FUNCTION $@20 ID $@21 START_PARENTHESIS $@22 idlist . END_PARENTHESIS $@23 block

    END_PARENTHESIS  shift, and go to state 212


State 207

   75 commaexpr: COMMA expr $@13 . commaexpr

    COMMA  shift, and go to state 183

    $default  reduce using rule 76 (commaexpr)

    commaexpr  go to state 213


State 208

  120 forstmt: forprefix N elist END_PARENTHESIS N stmt N .

    $default  reduce using rule 120 (forstmt)


State 209

  119 forprefix: FOR $@26 START_PARENTHESIS elist SEMICOLON M expr SEMICOLON .

    $default  reduce using rule 119 (forprefix)


State 210

  107 commaid: COMMA ID . $@25 commaid

    $default  reduce using rule 106 ($@25)

    $@25  go to state 214


State 211

   91 funcdef: FUNCTION $@17 START_PARENTHESIS $@18 idlist END_PARENTHESIS $@19 block .

    $default  reduce using rule 91 (funcdef)


State 212

   96 funcdef: FUNCTION $@20 ID $@21 START_PARENTHESIS $@22 idlist END_PARENTHESIS . $@23 block

    $default  reduce using rule 95 ($@23)

    $@23  go to state 215


State 213

   75 commaexpr: COMMA expr $@13 commaexpr .

    $default  reduce using rule 75 (commaexpr)


State 214

  107 commaid: COMMA ID $@25 . commaid

    COMMA  shift, and go to state 203

    $default  reduce using rule 108 (commaid)

    commaid  go to state 216


State 215

   96 funcdef: FUNCTION $@20 ID $@21 START_PARENTHESIS $@22 idlist END_PARENTHESIS $@23 . block

    CURLY_START_BRACKET  shift, and go to state 20

    block  go to state 217


State 216

  107 commaid: COMMA ID $@25 commaid .

    $default  reduce using rule 107 (commaid)


State 217

   96 funcdef: FUNCTION $@20 ID $@21 START_PARENTHESIS $@22 idlist END_PARENTHESIS $@23 block .

    $default  reduce using rule 96 (funcdef)
